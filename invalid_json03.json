{
	"openapi": "3.0.2",
	"components": {
		"securitySchemes": {
			"BearerAuth": {
				"type": "http",
				"scheme": "bearer"
			},
			"XEsTenantid": {
				"type": "apiKey",
				"name": "x-es-tenantid",
				"in": "header"
			}
		},
	},
	"security": [{
		"BearerAuth": []
	}, {
		"XEsTenantid": []
	}],
	"info": {
		"title": "Estatespace Platform (Public) API",
		"description": "Asset management automation platform",
		"version": "0.9.0",
		"termsOfService": "https://www.estatespace.com/terms-of-service/",
		"contact": {
			"name": "Estatespace Platform API",
			"url": "https://www.estatespace.com",
			"email": "support@griffingroupglobal.com"
		}
	},
	"servers": [{
		"url": "https://api.es-feature.io/api",
		"description": "Auth Feature server public path"
	}, {
		"url": "https://api.es-staging.io/api",
		"description": "Auth Staging server public path"
	}],
	"tags": [{
		"name": "Asset",
		"description": "An asset is a resource owned by a person or company, regarded as having value and available to meet debts, commitments, or legacies."
	}, {
		"name": "Codesystem",
		"description": "A codesystem represents a CTS (https://www.omg.org/cts2/index.htm) system of valueset data."
	}, {
		"name": "Consumable",
		"description": "A consumable represents a physical item used to perform a workflow."
	}, {
		"name": "Credentialmanager",
		"description": "Credentialmanager allows to create and updates a estatespace user's credentials"
	}, {
		"name": "File",
		"description": "A file is an abstract representation of data that is stored in a file on a computer"
	}, {
		"name": "Group",
		"description": "A group is a collection of roles"
	}, {
		"name": "Heartbeat",
		"description": "Heartbeat is a capability that allows any client to identify a estatespace instance."
	}, {
		"name": "Location",
		"description": "A Location represents the physical address where a workflow is performed."
	}, {
		"name": "Login",
		"description": "Login logs a credentialed user into estatespace."
	}, {
		"name": "Policy",
		"description": "A policy is the most basic entity with which to describe an access permission"
	}, {
		"name": "Property",
		"description": "A property is a group of buildings at a location."
	}, {
		"name": "Role",
		"description": "A role is a collection of policies."
	}, {
		"name": "User",
		"description": "A user is a person with credentials into estatespace. A user has groups that describes their permissions."
	}, {
		"name": "Valueset",
		"description": "A valueset represents a CTS (https://www.omg.org/cts2/index.htm) list of values"
	}],
	"paths": {
		"/Login/$gettokens": {
			"post": {
				"description": "Returns auth tokens needed to access auth endpoints. Only present on auth domains. access_token is the Bearer auth token",
				"operationId": "logingettokens",
				"tags": ["Login"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"username": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"password": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									}
								}
							},
							"example": {
								"username": "testuser",
								"password": "**********"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully returns tokens to auth user",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"access_token": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"refresh_token": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"scope": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"id_token": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"token_type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"expires_in": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Login~1%24gettokens/post/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Login/$health": {
			"get": {
				"description": "Reports of the health of the device running the Login microservice.",
				"operationId": "loginhealth",
				"tags": ["Login"],
				"responses": {
					"200": {
						"description": "Successful reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Heartbeat": {
			"get": {
				"description": "Denotes a estatespace server and the server is running",
				"operationId": "heartbeat",
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"tags": ["Heartbeat"],
				"responses": {
					"200": {
						"description": "Successful",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "issues"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"issues": {
											"type": "array",
											"items": {
												"description": "An issue that describes what happened on the server",
												"type": "object",
												"required": ["severity", "issue", "detail", "location"],
												"properties": {
													"severity": {
														"description": "A coded value (aka enumeration). This has a defined code and a value intended for display to a human. Indicates that the value is taken from a set of controlled strings defined elsewhere (e.g., Value Set). A code is restricted to a string which has at least one character and no leading or trailing whitespace, and where there is no whitespace other than single spaces in the contents. regex: [^\\s]+([\\s]?[^\\s]+)*",
														"type": "object",
														"properties": {
															"code": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"display": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															}
														}
													},
													"issue": {
														"$ref": "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema/properties/issues/items/properties/severity"
													},
													"detail": {
														"$ref": "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema/properties/issues/items/properties/severity"
													},
													"location": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Asset": {
			"get": {
				"description": "An asset is a resource owned by a person or company, regarded as having value and available to meet debts, commitments, or legacies. This route returns all Assets.",
				"operationId": "assetgetall",
				"tags": ["Asset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1File/get/parameters/1"
				}, {
					"$ref": "#/paths/~1File/get/parameters/2"
				}, {
					"$ref": "#/paths/~1File/get/parameters/3"
				}, {
					"$ref": "#/paths/~1File/get/parameters/4"
				}, {
					"$ref": "#/paths/~1File/get/parameters/6"
				}, {
					"in": "query",
					"name": "name",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The name to search for. This is a string value representing the name of asset."
				}, {
					"in": "query",
					"name": "category.code",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The category to search for. This is a string value representing the category's code of asset."
				}, {
					"in": "query",
					"name": "subcategory.code",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The subcategory to search for. This is a string value representing the subcategory's code of asset."
				}, {
					"in": "query",
					"name": "include",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The extra resources to include in the response based on references from each matched resource. Can have comma separated values (resource names). To include all possible resources, use ?include=all. These extra resources are not counted towards the total number of results in the bundle."
				}, {
					"in": "query",
					"name": "location",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The location to search for. This is a reference representing the location of asset."
				}, {
					"in": "query",
					"name": "property",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The property to search for. This is a reference representing the property of asset."
				}, {
					"in": "query",
					"name": "barcode",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The barcode to search for. This is a string value representing the barcode of asset."
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["id", "resource", "metadata", "name"],
												"properties": {
													"id": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"resource": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"reference": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"metadata": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
													},
													"name": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"description": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"category": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"subcategory": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"location": {
														"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/location"
													},
													"property": {
														"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/property"
													},
													"value": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"type": {
																	"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																},
																"units": {
																	"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																},
																"amount": {
																	"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																},
																"date": {
																	"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
																},
																"appraiser": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																},
																"intendedUse": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																},
																"examiner": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																},
																"dateOfExamination": {
																	"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
																}
															}
														}
													},
													"images": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"file": {
																	"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
																},
																"note": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																},
																"isPrimary": {
																	"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																}
															}
														}
													},
													"measurement": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"type": {
																	"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																},
																"units": {
																	"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																},
																"value": {
																	"type": "object"
																}
															}
														}
													},
													"barcode": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"tags": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/tags/items"
														}
													},
													"files": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
														}
													},
													"notes": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1File/get/parameters/3/schema"
														}
													},
													"provenance": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/provenance/items"
														}
													},
													"relationships": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items"
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Asset/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "An asset is a resource owned by a person or company, regarded as having value and available to meet debts, commitments, or legacies. This route creates a Asset",
				"operationId": "assetcreate",
				"tags": ["Asset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"resource": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"name": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"description": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"category": {
										"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
									},
									"subcategory": {
										"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
									},
									"location": {
										"description": "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Namedlocation resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
										"type": "string",
										"format": "URL"
									},
									"property": {
										"description": "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Property resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
										"type": "string",
										"format": "URL"
									},
									"value": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"type": {
													"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
												},
												"units": {
													"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
												},
												"amount": {
													"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
												},
												"date": {
													"description": "A date that is combined with a time of day (hours, minutes, seconds) with fractional seconds that is based on a 24-hour clock. A timezone must be included. regex: \\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01]) ([0-1][0-9]|2[0-3])\\:([0-5][0-9])\\:([0-5][0-9])\\.([0-9]{3,7})( ([\\-\\+]([0-1][0-9])\\:00))? ref: [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)",
													"type": "string",
													"format": "date-time"
												},
												"appraiser": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"intendedUse": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"examiner": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"dateOfExamination": {
													"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
												}
											}
										}
									},
									"images": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"file": {
													"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
												},
												"note": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"isPrimary": {
													"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
												}
											}
										}
									},
									"measurement": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"type": {
													"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
												},
												"units": {
													"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
												},
												"value": {
													"type": "object"
												}
											}
										}
									},
									"barcode": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"tags": {
										"type": "array",
										"items": {
											"description": "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Tag resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
											"type": "string",
											"format": "URL"
										}
									},
									"notes": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										}
									},
									"files": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
										}
									},
									"provenance": {
										"type": "array",
										"items": {
											"description": "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the User resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
											"type": "string",
											"format": "URL"
										}
									},
									"relationships": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"parent": {
													"description": "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to any Gravity resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
													"type": "string",
													"format": "URL"
												},
												"children": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items/properties/parent"
													}
												}
											}
										}
									}
								}
							},
							"example": {
								"name": "test Asset"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful creates a Asset",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["id", "resource", "metadata", "name"],
									"properties": {
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"name": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"description": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"category": {
											"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
										},
										"subcategory": {
											"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
										},
										"location": {
											"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/location"
										},
										"property": {
											"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/property"
										},
										"value": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"type": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"units": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"amount": {
														"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
													},
													"date": {
														"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
													},
													"appraiser": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"intendedUse": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"examiner": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"dateOfExamination": {
														"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
													}
												}
											}
										},
										"images": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"file": {
														"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
													},
													"note": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"isPrimary": {
														"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
													}
												}
											}
										},
										"measurement": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"type": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"units": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"value": {
														"type": "object"
													}
												}
											}
										},
										"barcode": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"tags": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/tags/items"
											}
										},
										"files": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
											}
										},
										"notes": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											}
										},
										"provenance": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/provenance/items"
											}
										},
										"relationships": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items"
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Asset/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Asset/{id}": {
			"get": {
				"description": "An asset is a resource owned by a person or company, regarded as having value and available to meet debts, commitments, or legacies. This route returns a specific Asset",
				"operationId": "assetgetbyid",
				"tags": ["Asset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Asset/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Asset/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "An asset is a resource owned by a person or company, regarded as having value and available to meet debts, commitments, or legacies. This route updates a specific Asset.",
				"operationId": "assetupdatebyid",
				"tags": ["Asset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Asset/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Asset/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "An asset is a resource owned by a person or company, regarded as having value and available to meet debts, commitments, or legacies. This route deletes a specific Asset",
				"operationId": "assetdeletebyid",
				"tags": ["Asset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Asset/$health": {
			"get": {
				"description": "Reports of the health of the device running the Asset microservice.",
				"operationId": "assethealth",
				"tags": ["Asset"],
				"responses": {
					"200": {
						"description": "Successful reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Asset/$totalvalue": {
			"get": {
				"description": "Returns a list containing total current value and count of all assets associated with a property.",
				"operationId": "assettotalvalue",
				"tags": ["Asset"],
				"parameters": [{
					"$ref": "#/paths/~1Asset/get/parameters/11"
				}],
				"responses": {
					"200": {
						"description": "Successful returns a list containing total current value and count of all assets associated with a property.",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"property": {
												"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/property"
											},
											"count": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
											},
											"total": {
												"description": "Rational numbers (i.e., numbers with a fractional component) that are represented in decimal format.",
												"type": "number",
												"format": "double"
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Asset~1%24totalvalue/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Asset/{id}/$requestappraisal": {
			"get": {
				"description": "Used to send an email request to estatespace with Asset information and user contact details who requested the asset appraisal.",
				"operationId": "assetrequestappraisal",
				"tags": ["Asset"],
				"parameters": [{
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful returns an operation outcome is email is successfully sent.",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/User": {
			"get": {
				"description": "Users represent estatespace platform users. This route returns all users currently on estatespace platform.",
				"operationId": "usergetall",
				"tags": ["User"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1File/get/parameters/1"
				}, {
					"$ref": "#/paths/~1File/get/parameters/2"
				}, {
					"$ref": "#/paths/~1File/get/parameters/3"
				}, {
					"$ref": "#/paths/~1File/get/parameters/4"
				}, {
					"in": "query",
					"name": "user",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The user to search for. This is either a string representing the user [firstname%20lastname] or a uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to a user."
				}, {
					"$ref": "#/paths/~1File/get/parameters/6"
				}, {
					"in": "query",
					"name": "active",
					"schema": {
						"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
					},
					"description": "The active to search for. This is a boolean value representing the status of user as active or not active."
				}, {
					"in": "query",
					"name": "username",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The username to search for. This is a string representing the username of user."
				}, {
					"in": "query",
					"name": "name.firstName",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The firstname to search for. This is a string representing the firstname of user."
				}, {
					"in": "query",
					"name": "name.lastName",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The lastname to search for. This is a string representing the lastname of user."
				}, {
					"in": "query",
					"name": "name.middleName",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The middleName to search for. This is a string representing the middleName of user."
				}, {
					"in": "query",
					"name": "name.nickName",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The nickName to search for. This is a string representing the nickName of user."
				}, {
					"in": "query",
					"name": "name.fullName",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The fullName to search for. This is a string representing the fullName of user."
				}, {
					"$ref": "#/paths/~1Asset/get/parameters/9"
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["resource", "metadata", "id", "active", "admin", "email"],
												"properties": {
													"id": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"resource": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"reference": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"metadata": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
													},
													"identifiers": {
														"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/identifiers"
													},
													"name": {
														"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/name"
													},
													"active": {
														"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
													},
													"admin": {
														"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
													},
													"username": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"email": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"security": {
														"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/security"
													},
													"groups": {
														"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/groups"
													},
													"contactPoint": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/contactPoint/items"
														}
													},
													"aboutMe": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"securityLabels": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/securityLabels/items"
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1User/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "Users represent estatespace platform users. This route creates a user",
				"operationId": "usercreate",
				"tags": ["User"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": ["email"],
								"properties": {
									"resource": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"metadata": {
										"type": "object",
										"properties": {
											"dataUse": {
												"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
											}
										}
									},
									"name": {
										"type": "object",
										"required": ["firstName", "lastName"],
										"properties": {
											"title": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"firstName": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"middleName": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"lastName": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"prefix": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"suffix": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"nickName": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"fullName": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"rank": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
											}
										}
									},
									"active": {
										"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
									},
									"admin": {
										"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
									},
									"username": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"email": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"security": {
										"type": "object",
										"properties": {
											"corporateLabels": {
												"type": "array",
												"items": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												}
											},
											"resourceLabels": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											}
										}
									},
									"permissions": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										}
									},
									"identifiers": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
										}
									},
									"contactPoint": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["system", "use", "value"],
											"properties": {
												"system": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"use": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"value": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"rank": {
													"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
												}
											}
										}
									},
									"groups": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										}
									},
									"securityLabels": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["resource", "permissions"],
											"properties": {
												"resource": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"permissions": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													}
												}
											}
										}
									}
								}
							},
							"example": {
								"name": {
									"firstName": "Test",
									"lastName": "Mc.Tester"
								},
								"username": "testmctester",
								"email": "mctester@testing.com",
								"type": "Int-Principal"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates a user",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/User/{id}": {
			"get": {
				"description": "Users represent estatespace platform users. This route returns a specific user",
				"operationId": "usergetbyid",
				"tags": ["User"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "Users represent estatespace platform users. This route updates a specific user",
				"operationId": "userupdatebyid",
				"tags": ["User"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "Users represent estatespace platform users. This route deletes a specific user",
				"operationId": "userdeletebyid",
				"tags": ["User"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/User/$bulkcreate": {
			"post": {
				"description": "Users represent estatespace platform users. This route create bulk users",
				"operationId": "userbulkcreate",
				"tags": ["User"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"resource": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"parameters": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"resource": {
													"type": "object",
													"properties": {
														"metadata": {
															"type": "object",
															"properties": {
																"lastmodified": {
																	"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
																},
																"version": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																}
															}
														},
														"resource": {
															"$ref": "#/paths/~1File/get/parameters/3/schema"
														},
														"type": {
															"$ref": "#/paths/~1File/get/parameters/3/schema"
														},
														"total": {
															"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
														},
														"entries": {
															"type": "array",
															"items": {
																"type": "object",
																"required": ["email"],
																"properties": {
																	"resource": {
																		"$ref": "#/paths/~1File/get/parameters/3/schema"
																	},
																	"metadata": {
																		"type": "object",
																		"properties": {
																			"dataUse": {
																				"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																			}
																		}
																	},
																	"name": {
																		"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/name"
																	},
																	"active": {
																		"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																	},
																	"admin": {
																		"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																	},
																	"username": {
																		"$ref": "#/paths/~1File/get/parameters/3/schema"
																	},
																	"email": {
																		"$ref": "#/paths/~1File/get/parameters/3/schema"
																	},
																	"security": {
																		"type": "object",
																		"properties": {
																			"corporateLabels": {
																				"type": "array",
																				"items": {
																					"$ref": "#/paths/~1File/get/parameters/3/schema"
																				}
																			},
																			"resourceLabels": {
																				"$ref": "#/paths/~1File/get/parameters/3/schema"
																			}
																		}
																	},
																	"permissions": {
																		"type": "array",
																		"items": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		}
																	},
																	"identifiers": {
																		"type": "array",
																		"items": {
																			"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
																		}
																	},
																	"contactPoint": {
																		"type": "array",
																		"items": {
																			"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/contactPoint/items"
																		}
																	},
																	"groups": {
																		"type": "array",
																		"items": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		}
																	},
																	"securityLabels": {
																		"type": "array",
																		"items": {
																			"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/securityLabels/items"
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"example": {
								"resource": "Parameters",
								"parameters": [{
									"name": "Users",
									"resource": {
										"metadata": {
											"lastmodified": "2018-06-26T13:52:15.827Z",
											"version": "1.0.0"
										},
										"resource": "Bundle",
										"type": "list",
										"total": 2,
										"entries": [{
											"name": {
												"firstName": "Test",
												"lastName": "Mc.Tester"
											},
											"username": "testmctester",
											"email": "mctester@testing.com",
											"type": "Int-Principal"
										}, {
											"name": {
												"firstName": "Doesit",
												"lastName": "Work"
											},
											"username": "doesitwork",
											"email": "does@itwork.com",
											"type": "Principal"
										}]
									}
								}]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates atleast one user",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "parameters"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"parameters": {
											"type": "object",
											"required": ["returnBundle", "errorBundle"],
											"properties": {
												"returnBundle": {
													"type": "object",
													"required": ["name", "resource"],
													"properties": {
														"name": {
															"$ref": "#/paths/~1File/get/parameters/3/schema",
															"enum": "return"
														},
														"resource": {
															"type": "object",
															"properties": {
																"metadata": {
																	"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
																},
																"resource": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "Bundle"
																},
																"type": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "list"
																},
																"total": {
																	"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																},
																"entries": {
																	"type": "array",
																	"items": {
																		"$ref": "#/paths/~1User/get/responses/200/content/application~1json/schema/properties/entries/items"
																	}
																}
															}
														}
													}
												},
												"errorBundle": {
													"type": "object",
													"required": ["name", "resource"],
													"properties": {
														"name": {
															"$ref": "#/paths/~1File/get/parameters/3/schema",
															"enum": "errors"
														},
														"resource": {
															"type": "object",
															"properties": {
																"metadata": {
																	"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
																},
																"resource": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "Bundle"
																},
																"type": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "list"
																},
																"total": {
																	"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																},
																"entries": {
																	"type": "array",
																	"items": {
																		"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24bulkcreate/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/User/$currentuser": {
			"get": {
				"description": "Obtains the currently logged in user",
				"operationId": "usercurrentuser",
				"tags": ["User"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"responses": {
					"200": {
						"description": "Successfully obtained the currently logged in user",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id", "active", "admin", "email"],
									"properties": {
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"identifiers": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["use", "value"],
												"properties": {
													"use": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"period": {
														"type": "object",
														"required": ["start", "end"],
														"properties": {
															"start": {
																"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
															},
															"end": {
																"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
															}
														}
													},
													"value": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													}
												}
											}
										},
										"name": {
											"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/name"
										},
										"active": {
											"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
										},
										"admin": {
											"description": "A binary flag intended to represent logical truth values.",
											"type": "boolean"
										},
										"username": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"email": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"security": {
											"type": "object",
											"required": ["corporateLabels", "resourceLabels"],
											"properties": {
												"corporateLabels": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													}
												},
												"resourceLabels": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													}
												}
											}
										},
										"groups": {
											"description": "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Group resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
											"type": "string",
											"format": "URL"
										},
										"contactPoint": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/contactPoint/items"
											}
										},
										"aboutMe": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"securityLabels": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/securityLabels/items"
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/User/$userlimit": {
			"get": {
				"description": "Returns the maximum user resources allowed to be created for a Tenant",
				"operationId": "userlimit",
				"tags": ["User"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"responses": {
					"200": {
						"description": "Successfully obtained the currently logged in user",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24userlimit/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/User/$health": {
			"get": {
				"description": "Reports of the health of the device running the User microservice.",
				"operationId": "userhealth",
				"tags": ["User"],
				"responses": {
					"200": {
						"description": "Successful reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/User/{id}/$addpermission": {
			"patch": {
				"description": "Users represent estatespace platform users. This route adds a specific data level permission to a user",
				"operationId": "userupdatebyidaddpermission",
				"tags": ["User"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}, {
					"in": "query",
					"name": "resource",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The resource to set a permission for."
				}, {
					"in": "query",
					"name": "permission",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The permission to set for a user on with a given resource."
				}],
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/User/{id}/$deletepermission": {
			"patch": {
				"description": "Users represent estatespace platform users. This route removes a specific data level permission from a user",
				"operationId": "userupdatebyiddeletepermission",
				"tags": ["User"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}, {
					"$ref": "#/paths/~1User~1%7Bid%7D~1%24addpermission/patch/parameters/2"
				}, {
					"$ref": "#/paths/~1User~1%7Bid%7D~1%24addpermission/patch/parameters/3"
				}],
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Policy": {
			"get": {
				"description": "Policy represent estatespace platform policy. This route returns all policies currently on estatespace platform.",
				"operationId": "policygetall",
				"tags": ["Policy"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1File/get/parameters/1"
				}, {
					"$ref": "#/paths/~1File/get/parameters/2"
				}, {
					"$ref": "#/paths/~1File/get/parameters/3"
				}, {
					"$ref": "#/paths/~1File/get/parameters/4"
				}, {
					"$ref": "#/paths/~1User/get/parameters/5"
				}, {
					"$ref": "#/paths/~1File/get/parameters/6"
				}, {
					"in": "query",
					"name": "action",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The type to search for. This is a string (enum) representing the action/rights for a role."
				}, {
					"in": "query",
					"name": "entity",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The entity to search for. This is a string (enum) representing the entity of role."
				}, {
					"$ref": "#/paths/~1Asset/get/parameters/9"
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["resource", "metadata", "id", "action", "entity"],
												"properties": {
													"id": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"resource": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"reference": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"metadata": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
													},
													"action": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"entity": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Policy/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "Policys represent estatespace platform policy. This route creates a policy",
				"operationId": "policycreate",
				"tags": ["Policy"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"entity": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"action": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									}
								}
							},
							"example": {
								"action": "Create",
								"entity": "User"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates a policy",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id", "action", "entity"],
									"properties": {
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"action": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"entity": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Policy/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Policy/{id}": {
			"get": {
				"description": "Policys represent estatespace platform policy. This route returns a specific policy",
				"operationId": "policygetbyid",
				"tags": ["Policy"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Policy/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Policy/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "Policy represent estatespace platform policy. This route updates a specific policy",
				"operationId": "policyupdatebyid",
				"tags": ["Policy"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Policy/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Policy/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "Policy represent estatespace platform policy. This route deletes a specific policy",
				"operationId": "policydeletebyid",
				"tags": ["Policy"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Policy/$bulkcreate": {
			"post": {
				"description": "Policys represent estatespace platform policies. This route create bulk policies",
				"operationId": "policybulkcreate",
				"tags": ["Policy"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"resource": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"parameters": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"resource": {
													"type": "object",
													"properties": {
														"metadata": {
															"type": "object",
															"properties": {
																"lastmodified": {
																	"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
																},
																"version": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																}
															}
														},
														"resource": {
															"$ref": "#/paths/~1File/get/parameters/3/schema"
														},
														"type": {
															"$ref": "#/paths/~1File/get/parameters/3/schema"
														},
														"total": {
															"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
														},
														"entries": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"entity": {
																		"$ref": "#/paths/~1File/get/parameters/3/schema"
																	},
																	"action": {
																		"$ref": "#/paths/~1File/get/parameters/3/schema"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"example": {
								"resource": "Parameters",
								"parameters": [{
									"name": "Users",
									"resource": {
										"metadata": {
											"lastmodified": "2018-06-26T13:52:15.827Z",
											"version": "1.0.0"
										},
										"resource": "Bundle",
										"type": "list",
										"total": 1,
										"entries": [{
											"resource": {
												"entity": "testEntity1",
												"action": "Create"
											}
										}]
									}
								}]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates atleast one policy",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "parameters"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"parameters": {
											"type": "object",
											"required": ["returnBundle", "errorBundle"],
											"properties": {
												"returnBundle": {
													"type": "object",
													"required": ["name", "resource"],
													"properties": {
														"name": {
															"$ref": "#/paths/~1File/get/parameters/3/schema",
															"enum": "return"
														},
														"resource": {
															"type": "object",
															"properties": {
																"metadata": {
																	"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
																},
																"resource": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "Bundle"
																},
																"type": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "list"
																},
																"total": {
																	"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																},
																"entries": {
																	"type": "array",
																	"items": {
																		"$ref": "#/paths/~1Policy/get/responses/200/content/application~1json/schema/properties/entries/items"
																	}
																}
															}
														}
													}
												},
												"errorBundle": {
													"type": "object",
													"required": ["name", "resource"],
													"properties": {
														"name": {
															"$ref": "#/paths/~1File/get/parameters/3/schema",
															"enum": "errors"
														},
														"resource": {
															"type": "object",
															"properties": {
																"metadata": {
																	"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
																},
																"resource": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "Bundle"
																},
																"type": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "list"
																},
																"total": {
																	"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																},
																"entries": {
																	"type": "array",
																	"items": {
																		"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Policy~1%24bulkcreate/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Policy/$health": {
			"get": {
				"description": "Reports of the health of the device running the Policy microservice.",
				"operationId": "policyhealth",
				"tags": ["Policy"],
				"responses": {
					"200": {
						"description": "Successful reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Role": {
			"get": {
				"description": "Role represent estatespace platform role. This route returns all roles currently on estatespace platform.",
				"operationId": "rolegetall",
				"tags": ["Role"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1File/get/parameters/1"
				}, {
					"$ref": "#/paths/~1File/get/parameters/2"
				}, {
					"$ref": "#/paths/~1File/get/parameters/3"
				}, {
					"$ref": "#/paths/~1File/get/parameters/4"
				}, {
					"$ref": "#/paths/~1User/get/parameters/5"
				}, {
					"$ref": "#/paths/~1File/get/parameters/6"
				}, {
					"in": "query",
					"name": "type",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The type to search for. This is a string (enum) representing the type of role."
				}, {
					"in": "query",
					"name": "name",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The name to search for. This is a string value representing the name of role."
				}, {
					"in": "query",
					"name": "policies",
					"schema": {
						"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
					},
					"description": "The policy to search for. This is a string value representing the policy as in a role."
				}, {
					"$ref": "#/paths/~1Asset/get/parameters/9"
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["resource", "metadata", "id", "name", "type"],
												"properties": {
													"id": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"resource": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"reference": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"metadata": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
													},
													"name": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"type": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"policies": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Role/post/responses/201/content/application~1json/schema/properties/policies/items"
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Role/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "Roles represent estatespace platform roles. This route creates a role",
				"operationId": "rolecreate",
				"tags": ["Role"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"policies": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
										}
									}
								}
							},
							"example": {
								"name": "testRole",
								"type": "permission",
								"policies": ["7302088f-a495-4aea-b2be-4d3e595a904a"]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates a role",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id", "name", "type"],
									"properties": {
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"name": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"policies": {
											"type": "array",
											"items": {
												"description": "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Policy resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
												"type": "string",
												"format": "URL"
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Role/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Role/{id}": {
			"get": {
				"description": "Roles represent estatespace platform roles. This route returns a specific role",
				"operationId": "rolegetbyid",
				"tags": ["Role"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Role/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Role/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "Role represent estatespace platform role. This route updates a specific role",
				"operationId": "roleupdatebyid",
				"tags": ["Role"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Role/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Role/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "Roles represent estatespace platform roles. This route deletes a specific role",
				"operationId": "roledeletebyid",
				"tags": ["Role"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Role/$bulkcreate": {
			"post": {
				"description": "Roles represent estatespace platform roles. This route create bulk roles",
				"operationId": "rolebulkcreate",
				"tags": ["Role"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"resource": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"parameters": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"policies": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
													}
												}
											}
										}
									}
								}
							},
							"example": {
								"resource": "Parameters",
								"parameters": [{
									"name": "Users",
									"resource": {
										"metadata": {
											"lastmodified": "2018-06-26T13:52:15.827Z",
											"version": "1.0.0"
										},
										"resource": "Bundle",
										"type": "list",
										"total": 2,
										"entries": [{
											"metadata": {
												"dataUse": "test"
											},
											"resource": "Role",
											"name": "test1",
											"type": "permission",
											"policies": ["b79ec0ea-4cf7-45fd-a6a9-4b6fb2314ace", "b79ec0ea-4cf7-45fd-a6a9-4b6fb2314ace"]
										}]
									}
								}]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates atleast one role",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "parameters"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"parameters": {
											"type": "object",
											"required": ["returnBundle", "errorBundle"],
											"properties": {
												"returnBundle": {
													"type": "object",
													"required": ["name", "resource"],
													"properties": {
														"name": {
															"$ref": "#/paths/~1File/get/parameters/3/schema",
															"enum": "return"
														},
														"resource": {
															"type": "object",
															"properties": {
																"metadata": {
																	"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
																},
																"resource": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "Bundle"
																},
																"type": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "list"
																},
																"total": {
																	"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																},
																"entries": {
																	"type": "array",
																	"items": {
																		"$ref": "#/paths/~1Role/get/responses/200/content/application~1json/schema/properties/entries/items"
																	}
																}
															}
														}
													}
												},
												"errorBundle": {
													"type": "object",
													"required": ["name", "resource"],
													"properties": {
														"name": {
															"$ref": "#/paths/~1File/get/parameters/3/schema",
															"enum": "errors"
														},
														"resource": {
															"type": "object",
															"properties": {
																"metadata": {
																	"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
																},
																"resource": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "Bundle"
																},
																"type": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "list"
																},
																"total": {
																	"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																},
																"entries": {
																	"type": "array",
																	"items": {
																		"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Role~1%24bulkcreate/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Role/$health": {
			"get": {
				"description": "Reports of the health of the device running the Role microservice.",
				"operationId": "rolehealth",
				"tags": ["Role"],
				"responses": {
					"200": {
						"description": "Successful reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Group": {
			"get": {
				"description": "Group represent estatespace platform group. This route returns all groups currently on estatespace platform.",
				"operationId": "groupgetall",
				"tags": ["Group"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1File/get/parameters/1"
				}, {
					"$ref": "#/paths/~1File/get/parameters/2"
				}, {
					"$ref": "#/paths/~1File/get/parameters/3"
				}, {
					"$ref": "#/paths/~1File/get/parameters/4"
				}, {
					"$ref": "#/paths/~1User/get/parameters/5"
				}, {
					"$ref": "#/paths/~1File/get/parameters/6"
				}, {
					"in": "query",
					"name": "type",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The type to search for. This is a string (enum) representing the type of group."
				}, {
					"in": "query",
					"name": "name",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The name to search for. This is a string value representing the name of group."
				}, {
					"in": "query",
					"name": "roles",
					"schema": {
						"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
					},
					"description": "The role to search for. This is a string value representing the roles as in a group."
				}, {
					"$ref": "#/paths/~1Asset/get/parameters/9"
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["resource", "metadata", "id", "name", "type"],
												"properties": {
													"id": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"resource": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"reference": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"metadata": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
													},
													"name": {
														"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/name"
													},
													"type": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"roles": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Group/post/responses/201/content/application~1json/schema/properties/roles/items"
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "Groups represent estatespace platform roles. This route creates a group",
				"operationId": "groupcreate",
				"tags": ["Group"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"metadata": {
										"type": "object",
										"properties": {
											"dataUse": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											}
										}
									},
									"resource": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"name": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"type": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"roles": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
										}
									}
								}
							},
							"example": {
								"metadata": {
									"dataUse": "test"
								},
								"resource": "Group",
								"name": "testGroup",
								"type": "permission",
								"roles": ["b79ccffb-4ab5-4ae1-b3f5-78d7856f4738"]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates a role",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id", "name", "type"],
									"properties": {
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"name": {
											"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/name"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"roles": {
											"type": "array",
											"items": {
												"description": "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the Role resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
												"type": "string",
												"format": "URL"
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Group/{id}": {
			"get": {
				"description": "Groups represent estatespace platform groups. This route returns a specific group",
				"operationId": "groupgetbyid",
				"tags": ["Group"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"in": "path",
					"name": "id",
					"schema": {
						"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
					},
					"description": "The id of the specific resource to take action against",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Group/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "Group represent estatespace platform group. This route updates a specific group",
				"operationId": "groupupdatebyid",
				"tags": ["Group"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Group/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "Groups represent estatespace platform groups. This route deletes a specific group",
				"operationId": "groupdeletebyid",
				"tags": ["Group"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Group/$bulkcreate": {
			"post": {
				"description": "Groups represent estatespace platform groups. This route create bulk groups",
				"operationId": "groupbulkcreate",
				"tags": ["Group"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"resource": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"parameters": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"resource": {
													"type": "object",
													"properties": {
														"metadata": {
															"type": "object",
															"properties": {
																"lastmodified": {
																	"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
																},
																"version": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																}
															}
														},
														"resource": {
															"$ref": "#/paths/~1File/get/parameters/3/schema"
														},
														"type": {
															"$ref": "#/paths/~1File/get/parameters/3/schema"
														},
														"total": {
															"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
														},
														"entries": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"metadata": {
																		"type": "object",
																		"properties": {
																			"dataUse": {
																				"$ref": "#/paths/~1File/get/parameters/3/schema"
																			}
																		}
																	},
																	"resource": {
																		"$ref": "#/paths/~1File/get/parameters/3/schema"
																	},
																	"name": {
																		"$ref": "#/paths/~1File/get/parameters/3/schema"
																	},
																	"type": {
																		"$ref": "#/paths/~1File/get/parameters/3/schema"
																	},
																	"roles": {
																		"type": "array",
																		"items": {
																			"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"example": {
								"esource": "Parameters",
								"parameters": [{
									"name": "Users",
									"resource": {
										"metadata": {
											"lastmodified": "2018-06-26T13:52:15.827Z",
											"version": "1.0.0"
										},
										"resource": "Bundle",
										"type": "list",
										"total": 1,
										"entries": [{
											"resource": {
												"metadata": {
													"dataUse": "test"
												},
												"resource": "Group",
												"name": "TripScheduler1",
												"type": "permission",
												"roles": ["7c0f8130-f184-4aa7-92aa-9f60c14abce6"]
											}
										}]
									}
								}]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates atleast one role",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "parameters"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"parameters": {
											"type": "object",
											"required": ["returnBundle", "errorBundle"],
											"properties": {
												"returnBundle": {
													"type": "object",
													"required": ["name", "resource"],
													"properties": {
														"name": {
															"$ref": "#/paths/~1File/get/parameters/3/schema",
															"enum": "return"
														},
														"resource": {
															"type": "object",
															"properties": {
																"metadata": {
																	"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
																},
																"resource": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "Bundle"
																},
																"type": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "list"
																},
																"total": {
																	"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																},
																"entries": {
																	"type": "array",
																	"items": {
																		"$ref": "#/paths/~1Group/get/responses/200/content/application~1json/schema/properties/entries/items"
																	}
																}
															}
														}
													}
												},
												"errorBundle": {
													"type": "object",
													"required": ["name", "resource"],
													"properties": {
														"name": {
															"$ref": "#/paths/~1File/get/parameters/3/schema",
															"enum": "errors"
														},
														"resource": {
															"type": "object",
															"properties": {
																"metadata": {
																	"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
																},
																"resource": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "Bundle"
																},
																"type": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema",
																	"enum": "list"
																},
																"total": {
																	"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																},
																"entries": {
																	"type": "array",
																	"items": {
																		"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"description": "The resource cannot be handled by the server, such as a file being too large to process",
						"headers": {
							"x-request-id": {
								"description": "An optional header to correlate client requests with server responses.",
								"schema": {
									"type": "string",
									"format": "uuid",
									"example": "716a79c7-d014-4e03-8ebf-75b3d85e351a"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							}
						}
					},
					"422": {
						"description": "The request resource violates business rules",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							}
						}
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Group/$health": {
			"get": {
				"description": "Reports of the health of the device running the Group microservice.",
				"operationId": "grouphealth",
				"tags": ["Group"],
				"responses": {
					"200": {
						"description": "Successful reports the health",
						"headers": {
							"x-request-id": {
								"description": "An optional header to correlate client requests with server responses.",
								"schema": {
									"type": "string",
									"format": "uuid",
									"example": "716a79c7-d014-4e03-8ebf-75b3d85e351a"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized access",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							}
						}
					},
					"404": {
						"description": "The requested endpoint could not be found",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							}
						}
					},
					"412": {
						"description": "The request failed to meet a precondition of the request",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "issues"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"issues": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema/properties/issues/items"
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							}
						}
					},
					"default": {
						"description": "Unknown or unexpected error",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							}
						}
					}
				}
			}
		},
		"/File": {
			"get": {
				"description": "File represent estatespace platform file. This route returns all files currently on estatespace platform.",
				"operationId": "filegetall",
				"tags": ["File"],
				"parameters": [{
					"in": "header",
					"description": "An optional header to correlate client requests with server responses.",
					"name": "x-request-id",
					"schema": {
						"type": "string",
						"format": "uuid",
						"example": "716a79c7-d014-4e03-8ebf-75b3d85e351a"
					}
				}, {
					"in": "query",
					"name": "id",
					"schema": {
						"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
					},
					"description": "The id to search for."
				}, {
					"in": "query",
					"name": "lastUpdated",
					"schema": {
						"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
					},
					"description": "The datetime to search for. May be prepended with operators [gt, gte, lt, lte] and may be comma separated where the first datetime is the start date and the second is the end date."
				}, {
					"in": "query",
					"name": "dataUse",
					"schema": {
						"description": "A variable-length sequence of unicode characters. Max string limit should not exceed 1 MB. Any valid Unicode characters above decimal 31. Can include u0009 (horizontal tab), u0010 (line feed), and u0013 (carriage return)",
						"type": "string"
					},
					"description": "The datause type. Typically test or production."
				}, {
					"in": "query",
					"name": "text",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The text to search for within the resource"
				}, {
					"$ref": "#/paths/~1User/get/parameters/5"
				}, {
					"in": "query",
					"name": "limit",
					"schema": {
						"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
					},
					"description": "The max search results per page. Value can be between 10 and 500. If the value is outside this range then it is automatically updated to be within the range. This limit shall only affect matched results and not included results."
				}, {
					"in": "query",
					"name": "metadata.createdBy",
					"schema": {
						"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
					},
					"description": "The createdBy to search for. This is a string representing the user who created the file."
				}, {
					"$ref": "#/paths/~1Asset/get/parameters/9"
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"description": "Integer based numbers (64 bits), no decimals",
											"type": "number",
											"format": "integer"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"relation": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"url": {
														"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
													}
												}
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["resource", "metadata", "id", "name", "size", "contentType"],
												"properties": {
													"id": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"resource": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"reference": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"metadata": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
													},
													"name": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/name"
													},
													"size": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/size"
													},
													"contentType": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/name"
													},
													"contentsUrl": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/contentsUrl"
													},
													"hash": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/name"
													},
													"tags": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/tags/items"
														}
													},
													"metatags": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metatags"
													},
													"thumbnail": {
														"$ref": "#/paths/~1File/post/requestBody/content/application~1json/schema/properties/data"
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "File represent estatespace platform file. This route creates a file",
				"operationId": "filecreate",
				"tags": ["File"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"tags": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/tags/items"
										}
									},
									"size": {
										"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
									},
									"hash": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"data": {
										"description": "A variable-width binary string (i.e., stream of bytes) that is base64 encoded [RFC 4648](https://tools.ietf.org/html/rfc4648), regex: ^@[a-zA-Z0-9+/]+={0,2}$",
										"type": "string"
									}
								}
							},
							"example": {
								"name": "example.pdf",
								"size": 11810,
								"hash": "6c8774bc6ad3f0005f8018f865dc48a6",
								"data": "data:application/pdf;base64,"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfull create",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id", "name", "size", "contentType"],
									"properties": {
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"type": "object",
											"required": ["lastUpdated", "version"],
											"properties": {
												"lastUpdated": {
													"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/value/items/properties/date"
												},
												"version": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												}
											}
										},
										"name": {},
										"size": {},
										"contentType": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/name"
										},
										"contentsUrl": {},
										"hash": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/name"
										},
										"tags": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/tags/items"
											}
										},
										"metatags": {
											"type": "object",
											"required": ["position", "properties"],
											"properties": {
												"position": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/position"
													}
												},
												"properties": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"key": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"value": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"type": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"valuetype": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															}
														}
													}
												}
											}
										},
										"thumbnail": {
											"$ref": "#/paths/~1File/post/requestBody/content/application~1json/schema/properties/data"
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/File/{id}": {
			"get": {
				"description": "File represent estatespace platform file. This route returns a specific file",
				"operationId": "filegetbyid",
				"tags": ["File"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"description": "The requested resource could not be found because it was deleted",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							}
						}
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "File represent estatespace platform file. This route updates a specific file",
				"operationId": "fileupdatebyid",
				"tags": ["File"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"description": "BSEE Specification patch payload",
								"required": ["metadata", "patch"],
								"properties": {
									"metadata": {
										"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
									},
									"patch": {
										"type": "array",
										"items": {
											"description": "A JSONPatch document as defined by [RFC 6902](https://tools.ietf.org/html/rfc6902)",
											"required": ["op", "path"],
											"properties": {
												"op": {
													"type": "string",
													"description": "The operation to be performed",
													"enum": ["add", "remove", "replace", "move", "copy", "test"]
												},
												"path": {
													"type": "string",
													"description": "A JSON-Pointer"
												},
												"value": {
													"type": "object",
													"description": "The value to be used within the operations."
												},
												"from": {
													"type": "string",
													"description": "A string containing a JSON Pointer value."
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"description": "The resource version specified could not be updated. Most likely because it is too old (based on lastModified date)",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Group~1%24health/get/responses/412/content/application~1json/schema"
								}
							}
						}
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "File represent estatespace platform file. This route deletes a specific file",
				"operationId": "filedeletebyid",
				"tags": ["File"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/File/$health": {
			"get": {
				"description": "Reports of the health of the device running the File microservice.",
				"operationId": "filehealth",
				"tags": ["File"],
				"responses": {
					"200": {
						"description": "Successful reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"uptime": {
											"type": "object",
											"properties": {
												"value": {
													"$ref": "#/paths/~1Asset~1%24totalvalue/get/responses/200/content/application~1json/schema/items/properties/total"
												},
												"code": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"unit": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												}
											}
										},
										"usercpu": {
											"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema/properties/uptime"
										},
										"systemcpu": {
											"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema/properties/uptime"
										},
										"memory": {
											"type": "object",
											"properties": {
												"rss": {
													"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
												},
												"heapTotal": {
													"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
												},
												"heapUsed": {
													"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
												},
												"external": {
													"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
												}
											}
										},
										"nodeVersion": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"services": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"endpoint": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													}
												}
											}
										},
										"gravity": {
											"type": "object",
											"properties": {
												"name": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"version": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Credentialmanager/$forgotpassword": {
			"get": {
				"description": "Credentialmanager route is used to create or update a user's credentials. This route is called from the SignUp or Core's Front end.",
				"operationId": "credentialmanagerforgotpassword",
				"tags": ["Credentialmanager"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"in": "query",
					"name": "domain",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The domain to search for. This is a string representing the domain."
				}, {
					"in": "query",
					"name": "email",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The email to search for. This is a string representing the email."
				}],
				"responses": {
					"200": {
						"description": "Successfully sent a reset password email to the user",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Credentialmanager/{id}/$setpassword": {
			"post": {
				"description": "Credentialmanager route is used to create or update a user's credentials. This route is embedded in the reset password link that is snet to a user's email when creating or updating password.",
				"operationId": "credentialmanagersetpassword",
				"tags": ["Credentialmanager"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "Parameters payload that includes email and password",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "This resource specifies the parameters to be passed using a non get HTTP action",
								"required": ["resource", "parameters"],
								"properties": {
									"resource": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"parameters": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["name", "valueString"],
											"properties": {
												"name": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"valueString": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"resource": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												}
											}
										}
									}
								}
							},
							"example": {
								"resource": "Parameters",
								"parameters": [{
									"name": "password",
									"valueString": "validPasswordString"
								}, {
									"name": "email",
									"valueString": "validEmailString"
								}]
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1Credentialmanager~1%7Bid%7D~1%24setpassword/post/requestBody/content/application~1json/schema"
							},
							"example": {
								"resource": "Parameters",
								"parameters": [{
									"name": "password",
									"valueString": "validPasswordString"
								}, {
									"name": "email",
									"valueString": "validEmailString"
								}]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully created or updated the password",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Heartbeat/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Consumable": {
			"get": {
				"description": "Consumable represent estatespace platform consumable. This route returns all consumables currently on estatespace platform.",
				"operationId": "consumablegetall",
				"tags": ["Consumable"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1File/get/parameters/1"
				}, {
					"$ref": "#/paths/~1File/get/parameters/2"
				}, {
					"$ref": "#/paths/~1File/get/parameters/3"
				}, {
					"$ref": "#/paths/~1File/get/parameters/4"
				}, {
					"$ref": "#/paths/~1File/get/parameters/6"
				}, {
					"in": "query",
					"name": "name",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The name to search for. This is a string value representing the name of consumable."
				}, {
					"in": "query",
					"name": "category.code",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The category code to search for. Values can be found in codesystem. May be comma separated to search for multiple"
				}, {
					"$ref": "#/paths/~1Asset/get/parameters/9"
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["resource", "metadata", "id", "name"],
												"properties": {
													"resource": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"reference": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"metadata": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
													},
													"id": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"name": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"description": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"category": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"department": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"product": {
														"type": "object",
														"properties": {
															"model": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"description": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															}
														}
													},
													"manufacturer": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"manuals": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"type": {
																	"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																},
																"reference": {
																	"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
																},
																"hardCopyOnSite": {
																	"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																}
															}
														}
													},
													"files": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
														}
													},
													"tags": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/tags/items"
														}
													},
													"relationships": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items"
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Consumable/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "Consumable represent estatespace platform consumable. This route creates a consumable",
				"operationId": "consumablecreate",
				"tags": ["Consumable"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"metadata": {
										"type": "object",
										"properties": {
											"dataUse": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											}
										}
									},
									"name": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"description": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"tags": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/tags/items"
										}
									},
									"files": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
										}
									},
									"category": {
										"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
									},
									"product": {
										"type": "object",
										"properties": {
											"model": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"description": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											}
										}
									},
									"manufacturer": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"manuals": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"type": {
													"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
												},
												"reference": {
													"description": "A globally unique identifier that shall conform to [RFC 3986](https://tools.ietf.org/html/rfc3986).",
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates an consumable",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"description": "The location of the created resource",
								"schema": {
									"type": "string",
									"format": "URL",
									"example": "https://demo.griffindigitalidentityprotection.com/api/v1/{Resource}/{UUIDv4}"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id", "name"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"name": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"description": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"category": {
											"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
										},
										"department": {
											"description": "A data type that has a code and a system element that identifies where the definition of the code comes from",
											"type": "object",
											"required": ["system", "code", "version", "display"],
											"properties": {
												"system": {
													"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
												},
												"version": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"code": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"display": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"definition": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												}
											}
										},
										"product": {
											"type": "object",
											"properties": {
												"model": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"description": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												}
											}
										},
										"manufacturer": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"manuals": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"type": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"reference": {
														"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
													},
													"hardCopyOnSite": {
														"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
													}
												}
											}
										},
										"files": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
											}
										},
										"tags": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/tags/items"
											}
										},
										"relationships": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items"
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Consumable/{id}": {
			"get": {
				"description": "Consumable represent estatespace platform consumable. This route returns a specific consumable",
				"operationId": "consumablegetbyid",
				"tags": ["Consumable"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "Consumable represent estatespace platform consumable. This route updates a specific consumable",
				"operationId": "consumableupdatebyid",
				"tags": ["Consumable"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "Consumable represent estatespace platform consumable. This route deletes a specific consumable",
				"operationId": "consumabledeletebyid",
				"tags": ["Consumable"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Consumable/$health": {
			"get": {
				"description": "Reports of the health of the device running the Consumable microservice.",
				"operationId": "consumablehealth",
				"tags": ["Consumable"],
				"responses": {
					"200": {
						"description": "Successful reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Codesystem": {
			"get": {
				"description": "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses.",
				"operationId": "codesystemgetall",
				"tags": ["Codesystem"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1File/get/parameters/1"
				}, {
					"$ref": "#/paths/~1File/get/parameters/2"
				}, {
					"$ref": "#/paths/~1File/get/parameters/3"
				}, {
					"$ref": "#/paths/~1File/get/parameters/4"
				}, {
					"$ref": "#/paths/~1File/get/parameters/6"
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"uri": {
														"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
													},
													"resource": {
														"type": "object",
														"required": ["resource", "metadata", "id", "name", "status"],
														"properties": {
															"resource": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"reference": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"metadata": {
																"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
															},
															"id": {
																"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
															},
															"version": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"status": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"count": {
																"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
															},
															"url": {
																"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
															},
															"name": {
																"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1/schema"
															},
															"title": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"publisher": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"contact": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"name": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		},
																		"telecom": {
																			"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/contactPoint/items"
																		}
																	}
																}
															},
															"description": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"purpose": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"copyright": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"concept": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"code": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		},
																		"display": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		},
																		"definition": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		}
																	}
																}
															},
															"valueset": {
																"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Codesystem/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses.",
				"operationId": "codesystemcreate",
				"tags": ["Codesystem"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates a codesystem",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Codesystem/$health": {
			"get": {
				"description": "Reports of the health of the device running the Codesystem microservice.",
				"operationId": "codesystemhealth",
				"tags": ["Codesystem"],
				"responses": {
					"200": {
						"description": "Successfully reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Codesystem/{ctsId}": {
			"get": {
				"description": "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses.",
				"operationId": "codesystemgetbyid",
				"tags": ["Codesystem"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"in": "path",
					"name": "ctsId",
					"schema": {
						"description": "A string to uniquely identify a Codesystem or Valueset. It is a sanitized string consisting of ASCII letters (A-Z or a-z) or dashes (-), starts ands with an alphanumeric, and only single dashes in sequence.",
						"type": "string"
					},
					"description": "The name of the specific resource to take action against",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses.",
				"operationId": "codesystemupdatebyid",
				"tags": ["Codesystem"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id", "name", "status"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"version": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"status": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"count": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"url": {},
										"name": {
											"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1/schema"
										},
										"title": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"publisher": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"contact": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"telecom": {
														"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/contactPoint/items"
													}
												}
											}
										},
										"description": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"purpose": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"copyright": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"concept": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"code": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"display": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"definition": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													}
												}
											}
										},
										"valueset": {
											"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses.",
				"operationId": "codesystemdeletebyid",
				"tags": ["Codesystem"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Codesystem/$createvalueset": {
			"post": {
				"description": "Codesystems are lists of terminologies providing concepts that are interoperable to estatespace across uses. This is a helper operation to create a Codesystem AND a corresponding value set for a 1:1 mapping scenario between Codesystem and Valueset.",
				"operationId": "codesystemcreatevaluesetsop",
				"tags": ["Codesystem"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully creates a code system and a value set",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "parameters"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"parameters": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"resource": {
														"description": "A generic representation of a bundle",
														"type": "object",
														"required": ["resource", "metadata", "type"],
														"properties": {
															"resource": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"metadata": {
																"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
															},
															"id": {
																"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
															},
															"type": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"total": {
																"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
															},
															"page": {
																"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
															},
															"limit": {
																"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
															},
															"links": {
																"type": "array",
																"items": {
																	"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
																}
															},
															"entries": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"id": {
																			"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																		},
																		"resource": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Codesystem~1%24createvalueset/post/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Valueset": {
			"get": {
				"description": "Valuesets are terminology compositions from 1 or more Codesets",
				"operationId": "valuesetgetall",
				"tags": ["Valueset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1File/get/parameters/1"
				}, {
					"$ref": "#/paths/~1File/get/parameters/2"
				}, {
					"$ref": "#/paths/~1File/get/parameters/3"
				}, {
					"$ref": "#/paths/~1File/get/parameters/4"
				}, {
					"$ref": "#/paths/~1File/get/parameters/6"
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"uri": {
														"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
													},
													"resource": {
														"type": "object",
														"required": ["metadata", "id", "name", "status"],
														"properties": {
															"resource": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"reference": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"metadata": {
																"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
															},
															"id": {
																"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
															},
															"version": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"status": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"url": {
																"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
															},
															"name": {
																"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1/schema"
															},
															"title": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"publisher": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"contact": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"name": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		},
																		"telecom": {
																			"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/contactPoint/items"
																		}
																	}
																}
															},
															"description": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"purpose": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"copyright": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"compose": {
																"type": "object",
																"properties": {
																	"include": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"properties": {
																				"system": {
																					"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
																				},
																				"version": {
																					"$ref": "#/paths/~1File/get/parameters/3/schema"
																				},
																				"valueset": {
																					"type": "array",
																					"items": {
																						"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
																					}
																				},
																				"concept": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"properties": {
																							"code": {
																								"$ref": "#/paths/~1File/get/parameters/3/schema"
																							},
																							"display": {
																								"$ref": "#/paths/~1File/get/parameters/3/schema"
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Valueset/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "Valuesets are terminology compositions from 1 or more Codesets",
				"operationId": "valuesetcreate",
				"tags": ["Valueset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": ["metadata", "id", "name", "status"],
								"properties": {
									"resource": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"reference": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"metadata": {
										"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
									},
									"id": {
										"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
									},
									"version": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"status": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"url": {
										"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
									},
									"name": {
										"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1/schema"
									},
									"title": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"publisher": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"contact": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"telecom": {
													"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/contactPoint/items"
												}
											}
										}
									},
									"description": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"purpose": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"copyright": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"compose": {
										"type": "object",
										"properties": {
											"include": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"system": {
															"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
														},
														"version": {
															"$ref": "#/paths/~1File/get/parameters/3/schema"
														},
														"valueset": {
															"type": "array",
															"items": {
																"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
															}
														},
														"concept": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"code": {
																		"$ref": "#/paths/~1File/get/parameters/3/schema"
																	},
																	"display": {
																		"$ref": "#/paths/~1File/get/parameters/3/schema"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates a Valueset",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Valueset/$health": {
			"get": {
				"description": "Reports of the health of the device running the Valueset microservice.",
				"operationId": "valuesethealth",
				"tags": ["Valueset"],
				"responses": {
					"200": {
						"description": "Successfully reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Valueset/{ctsId}": {
			"get": {
				"description": "Valuesets are terminology compositions from 1 or more Codesets",
				"operationId": "valuesetgetbyid",
				"tags": ["Valueset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "Valuesets are terminology compositions from 1 or more Codesets",
				"operationId": "valuesetupdatebyid",
				"tags": ["Valueset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Valueset/post/requestBody/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "Valuesets are terminology compositions from 1 or more Codesets",
				"operationId": "valuesetdeletebyid",
				"tags": ["Valueset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Valueset/{ctsId}/$expand": {
			"get": {
				"description": "Valuesets are terminology compositions from 1 or more Codesets. This is a convenience function to find and expand the terminologies. It may redirect to a global server.",
				"operationId": "valuesetexpandop",
				"tags": ["Valueset"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully creates a code system and a value set",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["metadata", "id", "name", "status"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"description": "Any combination of upper case or lower case alphanumeric charaters or specials chararaters. Can include ASCII letters (A-Z or a-z), numerals (0-9), dashes (-) or periods (.). Has a length limit of 64 characters. Can be an integer, an un-prefixed Object Identifier (OID), globally/universally unique identifier (UUID/GUID; RFC [4122](https://tools.ietf.org/html/rfc4122)), or any other identifier pattern that meets these constraints. regex: ^[A-Za-z0-9\\-\\.]{1,64}$",
											"type": "string",
											"format": "uuid"
										},
										"version": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"status": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"url": {
											"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
										},
										"name": {
											"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/get/parameters/1/schema"
										},
										"title": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"publisher": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"contact": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"telecom": {
														"$ref": "#/paths/~1User/post/requestBody/content/application~1json/schema/properties/contactPoint/items"
													}
												}
											}
										},
										"description": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"purpose": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"copyright": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"compose": {
											"type": "object",
											"properties": {
												"include": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"system": {
																"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
															},
															"version": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"valueSet": {
																"type": "array",
																"items": {
																	"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
																}
															},
															"concept": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"code": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		},
																		"display": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		}
																	}
																}
															}
														}
													}
												}
											}
										},
										"expansion": {
											"type": "object",
											"properties": {
												"total": {
													"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
												},
												"contains": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"system": {
																"$ref": "#/paths/~1Codesystem~1%7BctsId%7D/patch/responses/200/content/application~1json/schema/properties/url"
															},
															"version": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"code": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"display": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"definition": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"302": {
						"description": "The item was found on another server that supercedes this server, temporarily redirecting.",
						"headers": {
							"location": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Property": {
			"get": {
				"description": "Property represent estatespace platform property. This route returns all propertys currently on estatespace platform.",
				"operationId": "propertygetall",
				"tags": ["Property"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1File/get/parameters/1"
				}, {
					"$ref": "#/paths/~1File/get/parameters/2"
				}, {
					"$ref": "#/paths/~1File/get/parameters/3"
				}, {
					"$ref": "#/paths/~1File/get/parameters/4"
				}, {
					"$ref": "#/paths/~1User/get/parameters/5"
				}, {
					"$ref": "#/paths/~1File/get/parameters/6"
				}, {
					"in": "query",
					"name": "title",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The title to search for. This is a string representing the name of a property."
				}, {
					"in": "query",
					"name": "buildings.name",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The building's name to search for. This is a string representing a building's name in the property."
				}, {
					"in": "query",
					"name": "buildings.type.code",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The building's type to search for. This is a string (code) representing the type of building in the property."
				}, {
					"$ref": "#/paths/~1Asset/get/parameters/9"
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["resource", "metadata", "id", "title", "reference"],
												"properties": {
													"resource": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"reference": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"metadata": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
													},
													"id": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"title": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"images": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"file": {
																	"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
																},
																"note": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																},
																"isPrimary": {
																	"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																}
															}
														}
													},
													"files": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
														}
													},
													"description": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"notes": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"address": {
														"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/address"
													},
													"buildings": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"type": {
																	"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																},
																"id": {
																	"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																},
																"name": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																},
																"description": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																},
																"isOutdoor": {
																	"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																},
																"levels": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"id": {
																				"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																			},
																			"name": {
																				"$ref": "#/paths/~1File/get/parameters/3/schema"
																			}
																		}
																	}
																},
																"zones": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"id": {
																				"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																			},
																			"name": {
																				"$ref": "#/paths/~1File/get/parameters/3/schema"
																			}
																		}
																	}
																},
																"rooms": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"id": {
																				"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																			},
																			"name": {
																				"$ref": "#/paths/~1File/get/parameters/3/schema"
																			},
																			"type": {
																				"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																			},
																			"files": {
																				"type": "array",
																				"items": {
																					"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
																				}
																			},
																			"images": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"properties": {
																						"file": {
																							"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
																						},
																						"note": {
																							"$ref": "#/paths/~1File/get/parameters/3/schema"
																						},
																						"isPrimary": {
																							"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																						}
																					}
																				}
																			},
																			"area": {
																				"type": "object",
																				"properties": {
																					"value": {
																						"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																					},
																					"coding": {
																						"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																					}
																				}
																			},
																			"level": {
																				"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																			},
																			"zone": {
																				"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																			},
																			"space": {
																				"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																			}
																		}
																	}
																},
																"files": {
																	"type": "array",
																	"items": {
																		"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
																	}
																},
																"images": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"file": {
																				"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
																			},
																			"note": {
																				"$ref": "#/paths/~1File/get/parameters/3/schema"
																			},
																			"isPrimary": {
																				"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																			}
																		}
																	}
																},
																"address": {
																	"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/address"
																},
																"position": {
																	"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/position"
																}
															}
														}
													},
													"relationships": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items"
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Property/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "Property represent estatespace platform property. This route creates a property",
				"operationId": "propertycreate",
				"tags": ["Property"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"metadata": {
										"type": "object",
										"properties": {
											"dataUse": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											}
										}
									},
									"title": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"images": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"file": {
													"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
												},
												"note": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"isPrimary": {
													"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
												}
											}
										}
									},
									"files": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
										}
									},
									"description": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"notes": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"address": {
										"type": "object",
										"required": ["type", "use", "postal"],
										"properties": {
											"type": {
												"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
											},
											"use": {
												"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
											},
											"postal": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"street": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"street2": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"city": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"district": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"state": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"zipCode": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"country": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											},
											"rank": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
											}
										}
									},
									"buildings": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"type": {
													"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
												},
												"name": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"description": {
													"$ref": "#/paths/~1File/get/parameters/3/schema"
												},
												"isOutdoor": {
													"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
												},
												"levels": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
															},
															"name": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															}
														}
													}
												},
												"zones": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
															},
															"name": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															}
														}
													}
												},
												"rooms": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
															},
															"name": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"type": {
																"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
															},
															"files": {
																"type": "array",
																"items": {
																	"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
																}
															},
															"images": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"file": {
																			"description": "A uri, either absolute or relative [RFC 3986](https://tools.ietf.org/html/rfc3986) to the File resource. [JSON reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) may also be used.",
																			"type": "string",
																			"format": "URL"
																		},
																		"note": {
																			"$ref": "#/paths/~1File/get/parameters/3/schema"
																		},
																		"isPrimary": {
																			"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																		}
																	}
																}
															},
															"area": {
																"type": "object",
																"properties": {
																	"value": {
																		"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																	},
																	"coding": {
																		"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																	}
																}
															},
															"level": {
																"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
															},
															"zone": {
																"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
															},
															"space": {
																"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
															}
														}
													}
												},
												"files": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
													}
												},
												"images": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"file": {
																"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
															},
															"note": {
																"$ref": "#/paths/~1File/get/parameters/3/schema"
															},
															"isPrimary": {
																"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
															}
														}
													}
												},
												"address": {
													"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/address"
												},
												"position": {
													"type": "object",
													"required": ["latitude", "longitude", "altitude"],
													"properties": {
														"latitude": {
															"$ref": "#/paths/~1File/get/parameters/3/schema"
														},
														"longitude": {
															"$ref": "#/paths/~1File/get/parameters/3/schema"
														},
														"altitude": {
															"type": "object",
															"properties": {
																"value": {
																	"$ref": "#/paths/~1Asset~1%24totalvalue/get/responses/200/content/application~1json/schema/items/properties/total"
																},
																"unit": {
																	"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																}
															}
														}
													}
												}
											}
										}
									},
									"relationships": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items"
										}
									}
								}
							},
							"example": {
								"title": "Test Name"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates a role",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id", "title", "reference"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"title": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"images": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"file": {
														"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
													},
													"note": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"isPrimary": {
														"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
													}
												}
											}
										},
										"files": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
											}
										},
										"description": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"notes": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"address": {
											"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/address"
										},
										"buildings": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"type": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"id": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"name": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"description": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"isOutdoor": {
														"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
													},
													"levels": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"id": {
																	"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																},
																"name": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																}
															}
														}
													},
													"zones": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"id": {
																	"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																},
																"name": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																}
															}
														}
													},
													"rooms": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"id": {
																	"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																},
																"name": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																},
																"type": {
																	"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																},
																"files": {
																	"type": "array",
																	"items": {
																		"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
																	}
																},
																"images": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"properties": {
																			"file": {
																				"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
																			},
																			"note": {
																				"$ref": "#/paths/~1File/get/parameters/3/schema"
																			},
																			"isPrimary": {
																				"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																			}
																		}
																	}
																},
																"area": {
																	"type": "object",
																	"properties": {
																		"value": {
																			"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
																		},
																		"coding": {
																			"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																		}
																	}
																},
																"level": {
																	"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																},
																"zone": {
																	"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
																},
																"space": {
																	"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
																}
															}
														}
													},
													"files": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
														}
													},
													"images": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"file": {
																	"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/rooms/items/properties/images/items/properties/file"
																},
																"note": {
																	"$ref": "#/paths/~1File/get/parameters/3/schema"
																},
																"isPrimary": {
																	"$ref": "#/paths/~1User~1%24currentuser/get/responses/200/content/application~1json/schema/properties/admin"
																}
															}
														}
													},
													"address": {
														"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/address"
													},
													"position": {
														"$ref": "#/paths/~1Property/post/requestBody/content/application~1json/schema/properties/buildings/items/properties/position"
													}
												}
											}
										},
										"relationships": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items"
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Property/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Property/{id}": {
			"get": {
				"description": "Property represent estatespace platform property. This route returns a specific property",
				"operationId": "propertygetbyid",
				"tags": ["Property"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Property/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Property/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "Property represent estatespace platform property. This route updates a specific property",
				"operationId": "propertyupdatebyid",
				"tags": ["Property"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Property/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Property/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "Property represent estatespace platform property. This route deletes a specific property",
				"operationId": "propertydeletebyid",
				"tags": ["Property"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Property/$health": {
			"get": {
				"description": "Reports of the health of the device running the Property microservice.",
				"operationId": "propertyhealth",
				"tags": ["Property"],
				"responses": {
					"200": {
						"description": "Successful reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Property/$propertylimit": {
			"get": {
				"description": "Returns the maximum property resources allowed to be created for a Tenant",
				"operationId": "propertylimit",
				"tags": ["Property"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"responses": {
					"200": {
						"description": "Successfully obtained the currently logged in user",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24userlimit/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1User~1%24userlimit/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Location": {
			"get": {
				"description": "Location represent estatespace platform location. This route returns all locations currently on estatespace platform.",
				"operationId": "locationgetall",
				"tags": ["Location"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1File/get/parameters/1"
				}, {
					"$ref": "#/paths/~1File/get/parameters/2"
				}, {
					"$ref": "#/paths/~1File/get/parameters/3"
				}, {
					"$ref": "#/paths/~1File/get/parameters/4"
				}, {
					"$ref": "#/paths/~1User/get/parameters/5"
				}, {
					"$ref": "#/paths/~1File/get/parameters/6"
				}, {
					"in": "query",
					"name": "title",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The title to search for. This is a string representing the name of a location."
				}, {
					"in": "query",
					"name": "property",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The property's reference to search for. This is a string representing the reference of property in the location."
				}, {
					"in": "query",
					"name": "building",
					"schema": {
						"$ref": "#/paths/~1File/get/parameters/3/schema"
					},
					"description": "The building's id to search for. This is a string representing a building's id in the property of a location."
				}, {
					"$ref": "#/paths/~1Asset/get/parameters/9"
				}],
				"responses": {
					"200": {
						"description": "Successful search for everything",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "id"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"type": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"total": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"page": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"limit": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"links": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/links/items"
											}
										},
										"entries": {
											"type": "array",
											"items": {
												"type": "object",
												"required": ["resource", "metadata", "id", "title", "reference", "count", "property"],
												"properties": {
													"resource": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"reference": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"metadata": {
														"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
													},
													"id": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"title": {
														"$ref": "#/paths/~1File/get/parameters/3/schema"
													},
													"property": {
														"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
													},
													"building": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"level": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"zone": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"space": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"area": {
														"type": "object",
														"properties": {
															"value": {
																"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
															},
															"coding": {
																"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
															}
														}
													},
													"room": {
														"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
													},
													"roomType": {
														"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
													},
													"count": {
														"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
													},
													"relationships": {
														"type": "array",
														"items": {
															"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items"
														}
													}
												}
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Location/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"post": {
				"description": "Location represent estatespace platform location. This route creates a location",
				"operationId": "locationcreate",
				"tags": ["Location"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"metadata": {
										"type": "object",
										"properties": {
											"dataUse": {
												"$ref": "#/paths/~1File/get/parameters/3/schema"
											}
										}
									},
									"title": {
										"$ref": "#/paths/~1File/get/parameters/3/schema"
									},
									"property": {
										"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
									},
									"building": {
										"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
									},
									"level": {
										"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
									},
									"zone": {
										"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
									},
									"space": {
										"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
									},
									"area": {
										"type": "object",
										"properties": {
											"value": {
												"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
											},
											"coding": {
												"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
											}
										}
									},
									"room": {
										"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
									},
									"roomType": {
										"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
									},
									"count": {
										"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
									},
									"relationships": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items"
										}
									}
								}
							},
							"example": {
								"title": "My apartment",
								"property": "Property/8e18499b-e5d3-4081-8ef2-c2e574fb2776",
								"count": 1
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully creates a location",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							},
							"location": {
								"$ref": "#/paths/~1Consumable/post/responses/201/headers/location"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["resource", "metadata", "id", "title", "reference", "count", "property"],
									"properties": {
										"resource": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"reference": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"metadata": {
											"$ref": "#/paths/~1File/post/responses/201/content/application~1json/schema/properties/metadata"
										},
										"id": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"title": {
											"$ref": "#/paths/~1File/get/parameters/3/schema"
										},
										"property": {
											"$ref": "#/paths/~1Consumable/post/requestBody/content/application~1json/schema/properties/manuals/items/properties/reference"
										},
										"building": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"level": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"zone": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"space": {
											"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
										},
										"area": {
											"type": "object",
											"properties": {
												"value": {
													"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
												},
												"coding": {
													"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
												}
											}
										},
										"room": {
											"$ref": "#/paths/~1Valueset~1%7BctsId%7D~1%24expand/get/responses/200/content/application~1json/schema/properties/id"
										},
										"roomType": {
											"$ref": "#/paths/~1Consumable/post/responses/201/content/application~1json/schema/properties/department"
										},
										"count": {
											"$ref": "#/paths/~1File/get/responses/200/content/application~1json/schema/properties/page"
										},
										"relationships": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1Asset/post/requestBody/content/application~1json/schema/properties/relationships/items"
											}
										}
									}
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Location/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Location/{id}": {
			"get": {
				"description": "Location represent estatespace platform location. This route returns a specific location",
				"operationId": "locationgetbyid",
				"tags": ["Location"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful retrieve",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Location/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Location/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"patch": {
				"description": "Location represent estatespace platform location. This route updates a specific location",
				"operationId": "locationupdatebyid",
				"tags": ["Location"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"requestBody": {
					"description": "A JSON Patch document describing the changes being requested",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						},
						"application/bsee+json": {
							"schema": {
								"$ref": "#/paths/~1File~1%7Bid%7D/patch/requestBody/content/application~1bsee%2Bjson/schema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful update",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1Location/post/responses/201/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1Location/post/responses/201/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"413": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/413"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			},
			"delete": {
				"description": "Location represent estatespace platform location. This route deletes a specific location",
				"operationId": "locationdeletebyid",
				"tags": ["Location"],
				"parameters": [{
					"$ref": "#/paths/~1File/get/parameters/0"
				}, {
					"$ref": "#/paths/~1Group~1%7Bid%7D/get/parameters/1"
				}],
				"responses": {
					"200": {
						"description": "Successful delete",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"409": {
						"$ref": "#/paths/~1File~1%7Bid%7D/patch/responses/409"
					},
					"410": {
						"$ref": "#/paths/~1File~1%7Bid%7D/get/responses/410"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"422": {
						"$ref": "#/paths/~1Group~1%24bulkcreate/post/responses/422"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		},
		"/Location/$health": {
			"get": {
				"description": "Reports of the health of the device running the Location microservice.",
				"operationId": "locationhealth",
				"tags": ["Location"],
				"responses": {
					"200": {
						"description": "Successful reports the health",
						"headers": {
							"x-request-id": {
								"$ref": "#/paths/~1Group~1%24health/get/responses/200/headers/x-request-id"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							},
							"application/bsee+json": {
								"schema": {
									"$ref": "#/paths/~1File~1%24health/get/responses/200/content/application~1json/schema"
								}
							}
						}
					},
					"401": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/401"
					},
					"404": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/404"
					},
					"412": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/412"
					},
					"default": {
						"$ref": "#/paths/~1Group~1%24health/get/responses/default"
					}
				}
			}
		}
	}
}