{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "INSTAFEED :: The Unseen World",
    "description" : "Official docummentation describing the API of InstaFeed.org [http://instafeed.org](https://instafeed.org)\n",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/InstaFeed.org/InstaFeedAPI/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://sk7zhhlnxe.execute-api.us-east-1.amazonaws.com/prod",
    "description" : "Integration service"
  } ],
  "paths" : {
    "/users" : {
      "post" : {
        "tags" : [ "onboard" ],
        "summary" : "Create an account",
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/sessions" : {
      "post" : {
        "tags" : [ "onboard" ],
        "summary" : "Login and create a new session token",
        "operationId" : "createSession",
        "requestBody" : {
          "description" : "Login data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201"
                }
              }
            }
          },
          "401" : {
            "description" : "No authorized. All field must be provided",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions" : {
      "post" : {
        "tags" : [ "onboard" ],
        "summary" : "Subscribe to the newsletter.",
        "operationId" : "subscribe",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_2"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Already subscribed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "201" : {
            "description" : "Subscribed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      }
    },
    "/identities/{email}" : {
      "get" : {
        "tags" : [ "onboard" ],
        "summary" : "Check if there is an account associated to the email.",
        "operationId" : "checkEmail",
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "description" : "Email to check",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Exists"
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          },
          "404" : {
            "description" : "Account not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/countries" : {
      "get" : {
        "tags" : [ "geolocation" ],
        "summary" : "List of countries",
        "operationId" : "getCountries",
        "responses" : {
          "200" : {
            "description" : "List of countries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        }
      }
    },
    "/countries/{country}/cities" : {
      "get" : {
        "tags" : [ "geolocation" ],
        "summary" : "List cities by country",
        "operationId" : "GetCities",
        "parameters" : [ {
          "name" : "country",
          "in" : "path",
          "description" : "Country id or code",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of cities",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "404" : {
            "description" : "Country not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Show the profile of an user",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/followers" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "List followers of an user",
        "operationId" : "getUserFollowers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of followers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Follow the user",
        "operationId" : "followUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Already followed"
          },
          "201" : {
            "description" : "Followed"
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Stop following the user",
        "operationId" : "unfollowUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Not followed"
          },
          "204" : {
            "description" : "Unfollowed"
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/users/{id}/following" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "List users followed by the user",
        "operationId" : "getUserFollowing",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of users followed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/topics" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "List topics followed by the user",
        "operationId" : "getUserTopics",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of topics followed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/news" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "List of recent news published by the user",
        "description" : "This endpoint was deprecated in favor to GET /users/{id}/posts?type=news",
        "operationId" : "getUserNews",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of news",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/users/{id}/posts" : {
      "get" : {
        "tags" : [ "user", "content" ],
        "summary" : "List of recent posts published by the user",
        "description" : "This endpoints deprecates GET /users/{id}/news",
        "operationId" : "getUserPosts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "news",
            "enum" : [ "news", "poll", "talent", "petition", "blogPost", "opinion" ]
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of posts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/me" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "View your profile",
        "operationId" : "getProfile",
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "account" ],
        "summary" : "Edit your profile",
        "operationId" : "editMe",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_3"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/users/me/preferences" : {
      "put" : {
        "tags" : [ "account" ],
        "summary" : "Edit your preferences",
        "operationId" : "editPreferences",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_4"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Preferences",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/users/me/passwords" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Change the current password by providing a new password",
        "operationId" : "createSession",
        "requestBody" : {
          "description" : "Passwords",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_5"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Password changes. Return a new session token.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201"
                }
              }
            }
          },
          "401" : {
            "description" : "No authorized. Invalid current password.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/topics" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "List topics that you follow.",
        "operationId" : "getMyTopics",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of topics followed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Follow multiple topics at once",
        "operationId" : "followTopics",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_6"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Topics followed"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/users/me/followers" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "View who is following me",
        "operationId" : "getFollowers",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/users/me/following" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "View who I follow",
        "operationId" : "getFollowing",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/users/me/likes" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "List objects liked by the user",
        "operationId" : "getLiked",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Filter by type of object ('news' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "news",
            "enum" : [ "news", "opinion", "poll", "petition" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of object",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_10"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/topics" : {
      "get" : {
        "tags" : [ "topic" ],
        "summary" : "List of topics.",
        "description" : "Pass ?limit=0 to get a no paginated list.\n",
        "operationId" : "getTopics",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of topics.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        }
      }
    },
    "/topics/{id}" : {
      "get" : {
        "tags" : [ "topic" ],
        "summary" : "Show the profile of a topic",
        "operationId" : "getTopic",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Topic id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "404" : {
            "description" : "Topic not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/topics/{id}/followers" : {
      "get" : {
        "tags" : [ "topic" ],
        "summary" : "List followers of a topic",
        "operationId" : "getTopicFollowers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Topic id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of followers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "404" : {
            "description" : "Topic not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "topic" ],
        "summary" : "Follow the topic",
        "operationId" : "followTopic",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Topic id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Already followed"
          },
          "201" : {
            "description" : "Followed"
          },
          "404" : {
            "description" : "Topic not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "topic" ],
        "summary" : "Stop following the topic",
        "operationId" : "unfollowTopic",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Topic id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Not followed"
          },
          "204" : {
            "description" : "Unfollowed"
          },
          "404" : {
            "description" : "Topic not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/topics/{id}/news" : {
      "get" : {
        "tags" : [ "topic" ],
        "summary" : "List of recent news published under the topic",
        "description" : "This endpoint was deprecated in favor to GET /topics/{id}/posts?type=news",
        "operationId" : "getTopicNews",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Topic id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "publisher",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of news",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "404" : {
            "description" : "Topic not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/topics/{id}/posts" : {
      "get" : {
        "tags" : [ "topic", "content" ],
        "summary" : "List of recent posts published under the topic",
        "description" : "This endpoints deprecates GET /topics/{id}/news",
        "operationId" : "getTopicPosts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Topic id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "news",
            "enum" : [ "news", "poll", "talent", "petition", "blogPost", "opinion" ]
          }
        }, {
          "name" : "publisher",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of posts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "404" : {
            "description" : "Topic not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/searches" : {
      "get" : {
        "tags" : [ "content" ],
        "summary" : "Search objects",
        "operationId" : "search",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "description" : "Searching text",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of objects",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "user", "topic", "content" ]
          }
        }, {
          "name" : "content_type",
          "in" : "query",
          "description" : "Filter the type of content objects. (Applicable when type=content)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "news",
            "enum" : [ "news", "poll", "talent", "petition", "blogPost", "opinion" ]
          }
        }, {
          "name" : "publisher",
          "in" : "query",
          "description" : "Filter by publisher (Applicable when type=content)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "description" : "Filter by topic (Applicable when type=content)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort the list of results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "relevant",
            "enum" : [ "relevant", "recent" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of news",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_12"
                }
              }
            }
          },
          "404" : {
            "description" : "Topic not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/uploads" : {
      "post" : {
        "tags" : [ "content" ],
        "summary" : "Request file upload",
        "description" : "Once sucessfully called the endpoint, you will get and upload URL with a predefined TTL, where to upload the file.\n\nUse PUT as http method to invoke the endpoint and the body should be th binary file.\n\nSend Content-Type header as MIME-Type of the file.\n\nExample:\n\n```javascript\n// Request to upload an image.\nconst response = await axios.post('/uploads, { type: 'image/png', folder: 'users' });\n// Grab the signed url for a direct upload.\nconst signedUrl = response.data.data.attributes.url;\n// Upload file content.\nawait axios.put(signedUrl, file, { headers: { 'Content-Type': 'image/png' } });\n// Final Url\nconst url = signedUrl.split('?')[0];\n```\n",
        "operationId" : "createUpload",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_7"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_1"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/reporters" : {
      "get" : {
        "tags" : [ "content" ],
        "summary" : "List of top reporters",
        "operationId" : "getTopReporters",
        "parameters" : [ {
          "name" : "x-insta-country",
          "in" : "header",
          "description" : "Country name, id, or code to localize the list of news",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "in"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of reporters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{id}" : {
      "put" : {
        "tags" : [ "content" ],
        "summary" : "Edit the content of a comment",
        "operationId" : "editComment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Comment Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_8"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Edited",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "403" : {
            "description" : "User can only edit his own comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          },
          "404" : {
            "description" : "Comment not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/voices" : {
      "get" : {
        "tags" : [ "voices" ],
        "summary" : "List voices",
        "operationId" : "getVoices",
        "parameters" : [ {
          "name" : "x-insta-country",
          "in" : "header",
          "description" : "Country name, id, or code to localize the list of news",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "in"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Filter by text",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of news to list (if omitted will display trending news)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "highlighted", "breaking", "editor", "spotlight" ]
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "description" : "Filter by topic",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Filter by country",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "publisher",
          "in" : "query",
          "description" : "Filter by author",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "origin",
          "in" : "query",
          "description" : "Source",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "citizen", "newsapi", "ani" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of news",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        }
      }
    },
    "/news" : {
      "get" : {
        "tags" : [ "news" ],
        "summary" : "List news",
        "operationId" : "getNews",
        "parameters" : [ {
          "name" : "x-insta-country",
          "in" : "header",
          "description" : "Country name, id, or code to localize the list of news",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "in"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Filter by text",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of news to list (if omitted will display trending news)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "highlighted", "breaking", "editor", "spotlight" ]
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "description" : "Filter by topic",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Filter by country",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "publisher",
          "in" : "query",
          "description" : "Filter by author",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "origin",
          "in" : "query",
          "description" : "Source",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "citizen", "newsapi", "ani" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of news",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "news" ],
        "summary" : "Publish a news",
        "operationId" : "createNews",
        "parameters" : [ {
          "name" : "action",
          "in" : "query",
          "description" : "Submit or validate the request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "submit",
            "enum" : [ "validate", "submit" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_9"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Published",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_2"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/news/{id}" : {
      "get" : {
        "tags" : [ "news" ],
        "summary" : "Get details of news",
        "operationId" : "getNews",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_2"
                }
              }
            }
          },
          "404" : {
            "description" : "News not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/news/{id}/comments" : {
      "get" : {
        "tags" : [ "news" ],
        "summary" : "List comments of a news",
        "operationId" : "getComments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "asc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_14"
                }
              }
            }
          },
          "404" : {
            "description" : "News not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "news" ],
        "summary" : "Comment the news",
        "operationId" : "commentNews",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_10"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "404" : {
            "description" : "News not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/news/{id}/comments/{comment}" : {
      "delete" : {
        "tags" : [ "news" ],
        "summary" : "Remove a comment",
        "operationId" : "removeCommentNews",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "comment",
          "in" : "path",
          "description" : "Comment Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "403" : {
            "description" : "User can only delete his own comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          },
          "404" : {
            "description" : "News or comment not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/news/{id}/votes" : {
      "post" : {
        "tags" : [ "news" ],
        "summary" : "Vote the news",
        "operationId" : "voteNews",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "Vote to apply ('like' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "like",
            "enum" : [ "like", "dislike" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Already voted"
          },
          "201" : {
            "description" : "Voted"
          },
          "404" : {
            "description" : "News not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "news" ],
        "summary" : "Remove your vote from the news",
        "operationId" : "removeVoteNews",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "Vote to apply ('like' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "like",
            "enum" : [ "like", "dislike" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "No voted"
          },
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "News not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/news/{id}/bookmarks" : {
      "post" : {
        "tags" : [ "news" ],
        "summary" : "Bookmark a news",
        "operationId" : "bookmarkNews",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_11"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Bookmarked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Bookmark"
                }
              }
            }
          },
          "404" : {
            "description" : "News not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "news" ],
        "summary" : "Remove the news from your bookmarks",
        "operationId" : "removeBookmarkNews",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "News Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "News not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/polls" : {
      "get" : {
        "tags" : [ "poll" ],
        "summary" : "List polls",
        "operationId" : "getPolls",
        "parameters" : [ {
          "name" : "x-insta-country",
          "in" : "header",
          "description" : "Country name, id, or code to localize the list of polls",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "in"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Filter by text",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "description" : "Filter by topic",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Filter by country",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "publisher",
          "in" : "query",
          "description" : "Filter by author",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "recent",
            "enum" : [ "recent", "votes" ]
          }
        }, {
          "name" : "order",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of polls",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "poll" ],
        "summary" : "Create a poll",
        "operationId" : "createPoll",
        "parameters" : [ {
          "name" : "action",
          "in" : "query",
          "description" : "Submit or validate the request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "submit",
            "enum" : [ "validate", "submit" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_12"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_3"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/polls/{id}" : {
      "get" : {
        "tags" : [ "poll" ],
        "summary" : "Get details of poll",
        "operationId" : "getPoll",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_3"
                }
              }
            }
          },
          "404" : {
            "description" : "Poll not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/polls/{id}/comments" : {
      "get" : {
        "tags" : [ "poll" ],
        "summary" : "List comments of poll",
        "operationId" : "getPollComments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "asc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_14"
                }
              }
            }
          },
          "404" : {
            "description" : "Poll not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "poll" ],
        "summary" : "Comment the poll",
        "operationId" : "commentPoll",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_13"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "404" : {
            "description" : "Poll not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/polls/{id}/comments/{comment}" : {
      "delete" : {
        "tags" : [ "poll" ],
        "summary" : "Remove a comment",
        "operationId" : "removeCommentPoll",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "comment",
          "in" : "path",
          "description" : "Comment Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "403" : {
            "description" : "User can only delete his own comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          },
          "404" : {
            "description" : "Poll or comment not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/polls/{id}/votes" : {
      "post" : {
        "tags" : [ "poll" ],
        "summary" : "Vote the poll",
        "operationId" : "votePoll",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_14"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Poll"
          },
          "400" : {
            "description" : "Already voted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          },
          "404" : {
            "description" : "Poll not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "poll" ],
        "summary" : "Remove your vote from the poll",
        "operationId" : "removeVotePoll",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "400" : {
            "description" : "Never voted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          },
          "404" : {
            "description" : "Poll not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/polls/{id}/bookmarks" : {
      "post" : {
        "tags" : [ "poll" ],
        "summary" : "Bookmark a poll",
        "operationId" : "bookmarkPoll",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_15"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Bookmarked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Bookmark"
                }
              }
            }
          },
          "404" : {
            "description" : "Poll not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "poll" ],
        "summary" : "Remove the poll from your bookmarks",
        "operationId" : "removeBookmarkPoll",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Poll Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "Poll not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/talents" : {
      "get" : {
        "tags" : [ "talent" ],
        "summary" : "List of talent posts",
        "operationId" : "getTalents",
        "parameters" : [ {
          "name" : "x-insta-country",
          "in" : "header",
          "description" : "Country name, id, or code to localize the list of talents",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "in"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Filter by text",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "description" : "Filter by topic",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Filter by country",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "publisher",
          "in" : "query",
          "description" : "Filter by author",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of talents",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_16"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "talent" ],
        "summary" : "Publish a talent post",
        "operationId" : "createTalent",
        "parameters" : [ {
          "name" : "action",
          "in" : "query",
          "description" : "Submit or validate the request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "submit",
            "enum" : [ "validate", "submit" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_16"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Published",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_4"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/talents/{id}" : {
      "get" : {
        "tags" : [ "talent" ],
        "summary" : "Get details of a talent post",
        "operationId" : "getTalent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Talent Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_4"
                }
              }
            }
          },
          "404" : {
            "description" : "Talent not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/talents/{id}/comments" : {
      "get" : {
        "tags" : [ "talent" ],
        "summary" : "List of comments in a talent post",
        "operationId" : "getTalentComments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Talent Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "asc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "404" : {
            "description" : "Talent not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "talent" ],
        "summary" : "Comment the talent post",
        "operationId" : "commentTalent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Talent Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_17"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "404" : {
            "description" : "News not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/talents/{id}/comments/{comment}" : {
      "delete" : {
        "tags" : [ "talent" ],
        "summary" : "Remove a comment",
        "operationId" : "removeCommentTalent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Talent Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "comment",
          "in" : "path",
          "description" : "Comment Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "403" : {
            "description" : "User can only delete his own comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          },
          "404" : {
            "description" : "Talent or comment not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/talents/{id}/votes" : {
      "post" : {
        "tags" : [ "talent" ],
        "summary" : "Vote the talent post",
        "operationId" : "voteTalent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Talent Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "Vote to apply ('like' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "like",
            "enum" : [ "like", "dislike" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Already voted"
          },
          "201" : {
            "description" : "Voted"
          },
          "404" : {
            "description" : "Talent not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "talent" ],
        "summary" : "Remove your vote from the talent",
        "operationId" : "removeVoteTalent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Talent Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "Vote to apply ('like' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "like",
            "enum" : [ "like", "dislike" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "No voted"
          },
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "Talent not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/talents/{id}/bookmarks" : {
      "post" : {
        "tags" : [ "talent" ],
        "summary" : "Bookmark a talent post",
        "operationId" : "bookmarkTalent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Talent Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_18"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Bookmarked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Bookmark"
                }
              }
            }
          },
          "404" : {
            "description" : "Talent not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "talent" ],
        "summary" : "Remove the talent post from your bookmarks",
        "operationId" : "removeBookmarkTalent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Talent Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "Talent not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/petitions" : {
      "get" : {
        "tags" : [ "petition" ],
        "summary" : "List of petition posts",
        "operationId" : "getPetitions",
        "parameters" : [ {
          "name" : "x-insta-country",
          "in" : "header",
          "description" : "Country name, id, or code to localize the list of petitions",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "in"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Filter by text",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "description" : "Filter by topic",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Filter by country",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "publisher",
          "in" : "query",
          "description" : "Filter by author",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of petitions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "petition" ],
        "summary" : "Publish a petition post",
        "operationId" : "createPetition",
        "parameters" : [ {
          "name" : "action",
          "in" : "query",
          "description" : "Submit or validate the request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "submit",
            "enum" : [ "validate", "submit" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_19"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Published",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_5"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/petitions/{id}" : {
      "get" : {
        "tags" : [ "petition" ],
        "summary" : "Get details of a petition post",
        "operationId" : "getPetition",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Petition Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_5"
                }
              }
            }
          },
          "404" : {
            "description" : "Petition not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/petitions/{id}/signatures" : {
      "get" : {
        "tags" : [ "petition" ],
        "summary" : "List of signatures in the petiton",
        "operationId" : "getPetitionSignatures",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Petition Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "display",
          "in" : "query",
          "description" : "List all signatures, even if they don't have a comment.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "comments" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of signatures",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          },
          "404" : {
            "description" : "Petition not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "petition" ],
        "summary" : "Sign the petition",
        "operationId" : "signPetition",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Petition Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_20"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_6"
                }
              }
            }
          },
          "404" : {
            "description" : "Petition not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/petitions/{id}/votes" : {
      "post" : {
        "tags" : [ "petition" ],
        "summary" : "Vote the petition post",
        "operationId" : "votePetition",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Petition Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "Vote to apply ('like' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "like",
            "enum" : [ "like", "dislike" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Already voted"
          },
          "201" : {
            "description" : "Voted"
          },
          "404" : {
            "description" : "Petition not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "petition" ],
        "summary" : "Remove your vote from the petition",
        "operationId" : "removeVotePetition",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Petition Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "Vote to apply ('like' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "like",
            "enum" : [ "like", "dislike" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "No voted"
          },
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "Petition not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/petitions/{id}/bookmarks" : {
      "post" : {
        "tags" : [ "petition" ],
        "summary" : "Bookmark a petition post",
        "operationId" : "bookmarkPetition",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Petition Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_21"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Bookmarked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Bookmark"
                }
              }
            }
          },
          "404" : {
            "description" : "Petition not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "petition" ],
        "summary" : "Remove the petition post from your bookmarks",
        "operationId" : "removeBookmarkPetition",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Petition Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "Petition not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/blogPost" : {
      "get" : {
        "tags" : [ "blogPost" ],
        "summary" : "List blog posts",
        "operationId" : "getBlogPosts",
        "parameters" : [ {
          "name" : "x-insta-country",
          "in" : "header",
          "description" : "Country name, id, or code to localize the list of posts",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "in"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Filter by text",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "description" : "Filter by topic",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Filter by country",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "publisher",
          "in" : "query",
          "description" : "Filter by author",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of posts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_19"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "blogPost" ],
        "summary" : "Publish a blog post",
        "operationId" : "createBlogPost",
        "parameters" : [ {
          "name" : "action",
          "in" : "query",
          "description" : "Submit or validate the request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "submit",
            "enum" : [ "validate", "submit" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_22"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Published",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_7"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/blogPosts/{id}" : {
      "get" : {
        "tags" : [ "blogPost" ],
        "summary" : "Get details of a blog post",
        "operationId" : "getBlogPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Post Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_7"
                }
              }
            }
          },
          "404" : {
            "description" : "Post not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/blogPosts/{id}/comments" : {
      "get" : {
        "tags" : [ "blogPost" ],
        "summary" : "List comments of a blog post",
        "operationId" : "getBlogPostComments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Post Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "asc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_14"
                }
              }
            }
          },
          "404" : {
            "description" : "Post not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "blogPost" ],
        "summary" : "Comment the blog post",
        "operationId" : "commentBlogPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Post Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_23"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "404" : {
            "description" : "Post not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/blogPosts/{id}/comments/{comment}" : {
      "delete" : {
        "tags" : [ "blogPost" ],
        "summary" : "Remove a comment",
        "operationId" : "removeCommentBlogPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Post Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "comment",
          "in" : "path",
          "description" : "Comment Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "403" : {
            "description" : "User can only delete his own comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          },
          "404" : {
            "description" : "Post or comment not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/blogPosts/{id}/votes" : {
      "post" : {
        "tags" : [ "blogPost" ],
        "summary" : "Vote the blog post",
        "operationId" : "voteBlogPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Post Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "Vote to apply ('like' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "like",
            "enum" : [ "like", "dislike" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Already voted"
          },
          "201" : {
            "description" : "Voted"
          },
          "404" : {
            "description" : "Post not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "blogPost" ],
        "summary" : "Remove your vote from the blog post",
        "operationId" : "removeVoteBlogPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Post Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "Vote to apply ('like' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "like",
            "enum" : [ "like", "dislike" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "No voted"
          },
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "Post not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/blogPosts/{id}/bookmarks" : {
      "post" : {
        "tags" : [ "blogPost" ],
        "summary" : "Bookmark a blog post",
        "operationId" : "bookmarkBlogPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Post Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_24"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Bookmarked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Bookmark"
                }
              }
            }
          },
          "404" : {
            "description" : "Post not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "blogPost" ],
        "summary" : "Remove the blog post from your bookmarks",
        "operationId" : "removeBookmarkBlogPost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Post Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "Post not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/opinions" : {
      "get" : {
        "tags" : [ "opinion" ],
        "summary" : "List opinions",
        "operationId" : "getOpinion",
        "parameters" : [ {
          "name" : "x-insta-country",
          "in" : "header",
          "description" : "Country name, id, or code to localize the list of opinions",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "in"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "Filter by text",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "description" : "Filter by topic",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Filter by country",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "publisher",
          "in" : "query",
          "description" : "Filter by author",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of opinions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_20"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "opinion" ],
        "summary" : "Publish an opinion",
        "operationId" : "createOpinion",
        "parameters" : [ {
          "name" : "action",
          "in" : "query",
          "description" : "Submit or validate the request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "submit",
            "enum" : [ "validate", "submit" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_25"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Published",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_8"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/opinions/{id}" : {
      "get" : {
        "tags" : [ "opinion" ],
        "summary" : "Get details of an opinion",
        "operationId" : "getOpinion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Opinion Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_8"
                }
              }
            }
          },
          "404" : {
            "description" : "Opinion not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/opinions/{id}/comments" : {
      "get" : {
        "tags" : [ "opinion" ],
        "summary" : "List comments of an opinion",
        "operationId" : "getOpinionComments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Opinion Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "asc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_14"
                }
              }
            }
          },
          "404" : {
            "description" : "Opinion not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "opinion" ],
        "summary" : "Comment the opinion",
        "operationId" : "commentOpinion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Opinion Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_26"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "404" : {
            "description" : "Opinion not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/opinions/{id}/comments/{comment}" : {
      "delete" : {
        "tags" : [ "opinion" ],
        "summary" : "Remove a comment",
        "operationId" : "removeCommentOpinion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Opinion Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "comment",
          "in" : "path",
          "description" : "Comment Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "403" : {
            "description" : "User can only delete his own comments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          },
          "404" : {
            "description" : "Opinion or comment not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/opinions/{id}/votes" : {
      "post" : {
        "tags" : [ "opinion" ],
        "summary" : "Vote the opinion",
        "operationId" : "voteOpinion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Opinion Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "Vote to apply ('like' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "like",
            "enum" : [ "like", "dislike" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Already voted"
          },
          "201" : {
            "description" : "Voted"
          },
          "404" : {
            "description" : "Opinion not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "opinion" ],
        "summary" : "Remove your vote from the opinion",
        "operationId" : "removeVoteOpinion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Opinion Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "Vote to apply ('like' if omitted)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "like",
            "enum" : [ "like", "dislike" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "No voted"
          },
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "Opinion not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/opinions/{id}/bookmarks" : {
      "post" : {
        "tags" : [ "opinion" ],
        "summary" : "Bookmark an opinion",
        "operationId" : "bookmarkOpinion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Opinion Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_27"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Bookmarked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Bookmark"
                }
              }
            }
          },
          "404" : {
            "description" : "Post not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "opinion" ],
        "summary" : "Remove the opinion from your bookmarks",
        "operationId" : "removeBookmarkOpinion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Opinion Id or slug",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "Opinion not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/bookmarks" : {
      "get" : {
        "tags" : [ "bookmark" ],
        "summary" : "List of bookmarks",
        "operationId" : "getBookmarks",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        }, {
          "name" : "order",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of bookmarks",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "bookmark" ],
        "summary" : "Create a bookmark",
        "operationId" : "createBookmark",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_28"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_9"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/bookmarks/{id}" : {
      "get" : {
        "tags" : [ "bookmark" ],
        "summary" : "Get details of bookmark",
        "operationId" : "getBookmark",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Bookmark Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_201_9"
                }
              }
            }
          },
          "404" : {
            "description" : "Bookmark not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "bookmark" ],
        "summary" : "Remove the bookmark.",
        "operationId" : "removeBookmark",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Bookmark Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "404" : {
            "description" : "Bookmark not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/users/{id}/collections" : {
      "get" : {
        "tags" : [ "bookmark" ],
        "summary" : "Get the list of public collections",
        "operationId" : "getCollections",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User Id or Slug.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of collections",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "example" : [ "Sport", "Business" ],
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/collections/{col}" : {
      "get" : {
        "tags" : [ "bookmark" ],
        "summary" : "List of bookmarks in the collection.",
        "operationId" : "getCollection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User Id or Slug.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "col",
          "in" : "path",
          "description" : "Name of the collection.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        }, {
          "name" : "order",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of bookmarks",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        }
      }
    },
    "/issueTypes" : {
      "get" : {
        "tags" : [ "content" ],
        "summary" : "List of types of issues to use when report an object",
        "operationId" : "getIssueTupes",
        "responses" : {
          "200" : {
            "description" : "List of issue types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                }
              }
            }
          }
        }
      }
    },
    "/issues" : {
      "post" : {
        "tags" : [ "content" ],
        "summary" : "Report an issue with a particular content",
        "operationId" : "reportIssue",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_29"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Issue reported."
          }
        }
      }
    },
    "/notifications" : {
      "get" : {
        "tags" : [ "notification" ],
        "summary" : "List of notifications.",
        "description" : "Fetch notifications for the authenticated user",
        "operationId" : "getNotifications",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 16
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of notifications.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      },
      "head" : {
        "tags" : [ "notification" ],
        "summary" : "Counter of unviewed notifications.",
        "description" : "Fetch unviewed notifications for the authenticated user",
        "operationId" : "getNotifications",
        "responses" : {
          "200" : {
            "description" : "List of notifications.",
            "headers" : {
              "X-Notification-Count" : {
                "description" : "Unviewed notification counter.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/notifications/views" : {
      "post" : {
        "tags" : [ "notification" ],
        "summary" : "Mark notifications as viewed by the user",
        "operationId" : "view",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_30"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Notifications marked as viewed."
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/notifications/read" : {
      "post" : {
        "tags" : [ "notification" ],
        "summary" : "Mark notifications as read by the user",
        "operationId" : "read",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_31"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Notifications marked as read."
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/notifications/unread" : {
      "post" : {
        "tags" : [ "notification" ],
        "summary" : "Mark notifications as unread by the user",
        "operationId" : "unread",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_32"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Notifications marked as read."
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/notifications/mutes" : {
      "post" : {
        "tags" : [ "notification" ],
        "summary" : "Mark notifications as muted by the user",
        "operationId" : "mute",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_33"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Notifications marked as muted."
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    },
    "/notifications/actives" : {
      "post" : {
        "tags" : [ "notification" ],
        "summary" : "Mark notifications as active by the user",
        "operationId" : "activate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_34"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Notifications marked as unmuted."
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "User" : {
        "title" : "User",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "default" : "user"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/User_attributes"
          }
        }
      },
      "MinifiedUser" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "default" : "user"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/MinifiedUser_attributes"
          }
        }
      },
      "Notification" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "notification"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Notification_attributes"
          }
        }
      },
      "Session" : {
        "title" : "Session",
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "session"
          },
          "id" : {
            "type" : "string",
            "description" : "Match the User Id"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Session_attributes"
          }
        }
      },
      "Subscription" : {
        "title" : "Subscription",
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "subscription"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Subscription_attributes"
          }
        }
      },
      "Topic" : {
        "title" : "Topic",
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "topic"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Topic_attributes"
          }
        }
      },
      "Country" : {
        "title" : "Country",
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "country"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Country_attributes"
          }
        }
      },
      "City" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "city"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/City_attributes"
          }
        }
      },
      "News" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "news"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/News_attributes"
          }
        }
      },
      "Poll" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "poll"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Poll_attributes"
          }
        }
      },
      "Talent" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "talent"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Talent_attributes"
          }
        }
      },
      "Petition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "petition"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Petition_attributes"
          }
        }
      },
      "PetitionSignature" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "signature"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/PetitionSignature_attributes"
          }
        }
      },
      "Comment" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "comment"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Comment_attributes"
          }
        }
      },
      "BlogPost" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "blogPost"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/BlogPost_attributes"
          }
        }
      },
      "Opinion" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "opinion"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Opinion_attributes"
          }
        }
      },
      "Upload" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "upload"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Upload_attributes"
          }
        }
      },
      "IssueType" : {
        "title" : "IssueType",
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "issueType"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/IssueType_attributes"
          }
        }
      },
      "Bookmark" : {
        "title" : "Bookmark",
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "bookmark"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Bookmark_attributes"
          }
        }
      },
      "ApiError" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "description" : "HTTP Error Code",
            "format" : "int32"
          },
          "code" : {
            "type" : "string",
            "description" : "Error code (e.g E_UNAUTHORIZED_ERROR)"
          },
          "title" : {
            "type" : "string",
            "description" : "Summary of what happened"
          },
          "detail" : {
            "type" : "string",
            "description" : "More elaborated error, with an explanation"
          },
          "meta" : {
            "type" : "object",
            "description" : "Metadata associated"
          }
        }
      },
      "ApiErrors" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiError"
            }
          }
        }
      },
      "body" : {
        "required" : [ "country", "email", "name", "password" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string",
            "description" : "Show this name instead the fullname. If omitted, name is used"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "password" : {
            "minLength" : 4,
            "type" : "string",
            "format" : "password"
          },
          "phone" : {
            "type" : "string"
          },
          "gender" : {
            "type" : "string",
            "enum" : [ "male", "female. other" ]
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date"
          },
          "about" : {
            "type" : "string"
          },
          "photo" : {
            "type" : "string",
            "description" : "base64-encoded file contents",
            "format" : "byte"
          },
          "country" : {
            "type" : "string",
            "description" : "Either a name, code, or id"
          },
          "city" : {
            "type" : "string",
            "description" : "Name of the city"
          }
        }
      },
      "inline_response_201" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Session"
          }
        }
      },
      "body_1" : {
        "required" : [ "login", "password" ],
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string",
            "description" : "Can be the email or phone"
          },
          "password" : {
            "type" : "string",
            "description" : "The password"
          }
        }
      },
      "body_2" : {
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "Send newsletter to this email",
            "format" : "email"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Subscription"
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          }
        }
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/City"
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          }
        }
      },
      "inline_response_200_4" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        }
      },
      "inline_response_200_5" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Topic"
          }
        }
      },
      "inline_response_200_6" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Topic"
            }
          }
        }
      },
      "inline_response_200_7" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/News"
            }
          }
        }
      },
      "inline_response_200_8" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/News"
              }, {
                "$ref" : "#/components/schemas/Poll"
              }, {
                "$ref" : "#/components/schemas/Talent"
              }, {
                "$ref" : "#/components/schemas/Petition"
              }, {
                "$ref" : "#/components/schemas/BlogPost"
              }, {
                "$ref" : "#/components/schemas/Opinion"
              } ]
            }
          }
        }
      },
      "body_3" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string",
            "description" : "Show this name instead the fullname. If omitted, name is used"
          },
          "email" : {
            "type" : "string",
            "description" : "Change the current email.",
            "format" : "email"
          },
          "phone" : {
            "type" : "string"
          },
          "gender" : {
            "type" : "string",
            "enum" : [ "male", "female. other" ]
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date"
          },
          "about" : {
            "type" : "string"
          },
          "photo" : {
            "type" : "string",
            "format" : "uri"
          },
          "country" : {
            "type" : "string",
            "description" : "Either a name, code, or id"
          },
          "city" : {
            "type" : "string",
            "description" : "Name of the city"
          },
          "slug" : {
            "type" : "string",
            "description" : "Username or slug."
          },
          "website" : {
            "type" : "string",
            "description" : "URL to personal website.",
            "format" : "uri"
          }
        }
      },
      "body_4" : {
        "type" : "object",
        "properties" : {
          "emailNotifications" : {
            "type" : "boolean",
            "description" : "Email when there are notifications on your stories and publications.",
            "default" : false
          },
          "postDigests" : {
            "type" : "string",
            "description" : "Email stories written and applauded.",
            "default" : "daily",
            "enum" : [ "off", "daily", "weekly" ]
          },
          "productAnnouncements" : {
            "type" : "boolean",
            "description" : "Email with news about the product features.",
            "default" : true
          },
          "writingOportunities" : {
            "type" : "boolean",
            "description" : "Email about personalized opportunities to write and engage.",
            "default" : true
          },
          "otherEmails" : {
            "type" : "boolean",
            "description" : "Non-administrative emails from InstaFeed.",
            "default" : true
          },
          "showSocialLinks" : {
            "type" : "boolean",
            "description" : "Include in the profile links to Social Networks.",
            "default" : true
          }
        }
      },
      "inline_response_200_9_data_attributes" : {
        "type" : "object",
        "properties" : {
          "emailNotifications" : {
            "type" : "boolean",
            "default" : true
          },
          "postDigests" : {
            "type" : "string",
            "default" : "off"
          },
          "productAnnouncements" : {
            "type" : "boolean",
            "default" : true
          },
          "writingOportunities" : {
            "type" : "boolean",
            "default" : true
          },
          "otherEmails" : {
            "type" : "boolean",
            "default" : true
          },
          "showSocialLinks" : {
            "type" : "boolean",
            "default" : true
          }
        }
      },
      "inline_response_200_9_data" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "pereference"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/inline_response_200_9_data_attributes"
          }
        }
      },
      "inline_response_200_9" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/inline_response_200_9_data"
          }
        }
      },
      "body_5" : {
        "required" : [ "currentPassword", "password" ],
        "type" : "object",
        "properties" : {
          "currentPassword" : {
            "type" : "string",
            "description" : "Validate the current password."
          },
          "password" : {
            "type" : "string",
            "description" : "Set the new password."
          }
        }
      },
      "body_6" : {
        "required" : [ "topics" ],
        "type" : "object",
        "properties" : {
          "topics" : {
            "type" : "array",
            "description" : "List of topic ids",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_200_10" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/News"
              } ]
            }
          }
        }
      },
      "inline_response_200_11_meta" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "inline_response_200_11" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Topic"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/inline_response_200_11_meta"
          }
        }
      },
      "inline_response_200_12" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/User"
              }, {
                "$ref" : "#/components/schemas/Topic"
              }, {
                "$ref" : "#/components/schemas/News"
              }, {
                "$ref" : "#/components/schemas/Poll"
              }, {
                "$ref" : "#/components/schemas/Talent"
              }, {
                "$ref" : "#/components/schemas/Petition"
              }, {
                "$ref" : "#/components/schemas/BlogPost"
              }, {
                "$ref" : "#/components/schemas/Opinion"
              } ]
            }
          }
        }
      },
      "body_7" : {
        "required" : [ "folder", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "MIME-Type of the file tp upload.",
            "enum" : [ "image/png", "image/jpeg", "image/pjpeg", "image/gif" ]
          },
          "folder" : {
            "type" : "string",
            "description" : "Folder where store the file.",
            "enum" : [ "users", "news" ]
          }
        }
      },
      "inline_response_201_1" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Upload"
          }
        }
      },
      "body_8" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "Comment contents"
          }
        }
      },
      "inline_response_200_13" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Comment"
          }
        }
      },
      "body_9" : {
        "required" : [ "content", "cover", "summary", "titlte", "topic" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Title"
          },
          "topic" : {
            "type" : "string",
            "description" : "Topic Id"
          },
          "summary" : {
            "type" : "string",
            "description" : "Short description for the news (headline)"
          },
          "cover" : {
            "type" : "string",
            "description" : "URL to a picture to use as cover.",
            "format" : "uri"
          },
          "video" : {
            "type" : "string",
            "description" : "A link to a video.",
            "format" : "uri"
          },
          "content" : {
            "type" : "string",
            "description" : "News contents (html payload)"
          },
          "anonymously" : {
            "type" : "boolean",
            "description" : "Publish anonymously?",
            "default" : false
          }
        }
      },
      "inline_response_201_2" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/News"
          }
        }
      },
      "inline_response_200_14" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Comment"
            }
          }
        }
      },
      "body_10" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "Comment contents"
          }
        }
      },
      "body_11" : {
        "type" : "object",
        "properties" : {
          "collectionName" : {
            "type" : "string",
            "description" : "Organize the bookmark in collections",
            "default" : "My Collection"
          },
          "privacy" : {
            "type" : "string",
            "description" : "Define a privacy for the bookmark in the collection.",
            "default" : "private",
            "enum" : [ "public", "private" ]
          }
        }
      },
      "inline_response_200_15" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Poll"
            }
          }
        }
      },
      "body_12" : {
        "required" : [ "choices", "cover", "titlte", "topic" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Titlte"
          },
          "topic" : {
            "type" : "string",
            "description" : "Topic Id"
          },
          "cover" : {
            "type" : "string",
            "description" : "URL to a picture to use as cover.",
            "format" : "uri"
          },
          "content" : {
            "type" : "string",
            "description" : "Poll contents (html payload)"
          },
          "endAt" : {
            "type" : "string",
            "description" : "Date (YYYY-MM-DD) when the poll ends",
            "format" : "date"
          },
          "choices" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_201_3" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Poll"
          }
        }
      },
      "body_13" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "Comment contents"
          }
        }
      },
      "body_14" : {
        "required" : [ "vote" ],
        "type" : "object",
        "properties" : {
          "vote" : {
            "type" : "string",
            "description" : "The vote",
            "enum" : [ "yes", "no", "maybe" ]
          }
        }
      },
      "body_15" : {
        "type" : "object",
        "properties" : {
          "collectionName" : {
            "type" : "string",
            "description" : "Organize the bookmark in collections",
            "default" : "My Collection"
          },
          "privacy" : {
            "type" : "string",
            "description" : "Define a privacy for the bookmark in the collection.",
            "default" : "private",
            "enum" : [ "public", "private" ]
          }
        }
      },
      "inline_response_200_16" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Talent"
            }
          }
        }
      },
      "body_16" : {
        "required" : [ "title", "topic" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Title"
          },
          "topic" : {
            "type" : "string",
            "description" : "Topic Id"
          },
          "cover" : {
            "type" : "string",
            "description" : "URL to a picture to use as cover.",
            "format" : "uri"
          },
          "video" : {
            "type" : "string",
            "description" : "A link to a video.",
            "format" : "uri"
          },
          "content" : {
            "type" : "string",
            "description" : "Talent contents (html payload)"
          }
        }
      },
      "inline_response_201_4" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Talent"
          }
        }
      },
      "body_17" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "Comment contents"
          }
        }
      },
      "body_18" : {
        "type" : "object",
        "properties" : {
          "collectionName" : {
            "type" : "string",
            "description" : "Organize the bookmark in collections",
            "default" : "My Collection"
          },
          "privacy" : {
            "type" : "string",
            "description" : "Define a privacy for the bookmark in the collection.",
            "default" : "private",
            "enum" : [ "public", "private" ]
          }
        }
      },
      "inline_response_200_17" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Petition"
            }
          }
        }
      },
      "body_19" : {
        "required" : [ "goal", "title", "to", "topic" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Title"
          },
          "to" : {
            "type" : "string",
            "description" : "The person, organization, or group that can make a decision about the petition."
          },
          "topic" : {
            "type" : "string",
            "description" : "Topic Id"
          },
          "cover" : {
            "type" : "string",
            "description" : "URL to a picture to use as cover.",
            "format" : "uri"
          },
          "content" : {
            "type" : "string",
            "description" : "Petition content (html payload)"
          },
          "goal" : {
            "type" : "integer",
            "description" : "How many signatures are required?",
            "format" : "int32"
          },
          "endAt" : {
            "type" : "string",
            "description" : "Optional ending date",
            "format" : "date"
          }
        }
      },
      "inline_response_201_5" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Petition"
          }
        }
      },
      "inline_response_200_18" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PetitionSignature"
            }
          }
        }
      },
      "body_20" : {
        "required" : [ "email", "lastName", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the user signing the petition"
          },
          "lastName" : {
            "type" : "string",
            "description" : "Last name of the user signing the petition"
          },
          "email" : {
            "type" : "string",
            "description" : "Email of the user signing the petition"
          },
          "content" : {
            "type" : "string",
            "description" : "Comment of the signature. Contains HTML tags"
          }
        }
      },
      "inline_response_201_6" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PetitionSignature"
          }
        }
      },
      "body_21" : {
        "type" : "object",
        "properties" : {
          "collectionName" : {
            "type" : "string",
            "description" : "Organize the bookmark in collections",
            "default" : "My Collection"
          },
          "privacy" : {
            "type" : "string",
            "description" : "Define a privacy for the bookmark in the collection.",
            "default" : "private",
            "enum" : [ "public", "private" ]
          }
        }
      },
      "inline_response_200_19" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BlogPost"
            }
          }
        }
      },
      "body_22" : {
        "required" : [ "content", "cover", "summary", "titlte", "topic" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Title"
          },
          "topic" : {
            "type" : "string",
            "description" : "Topic Id"
          },
          "summary" : {
            "type" : "string",
            "description" : "Short description for the post (headline)"
          },
          "cover" : {
            "type" : "string",
            "description" : "URL to a picture to use as cover.",
            "format" : "uri"
          },
          "video" : {
            "type" : "string",
            "description" : "A link to a video.",
            "format" : "uri"
          },
          "content" : {
            "type" : "string",
            "description" : "Post contents (html payload)"
          },
          "anonymously" : {
            "type" : "boolean",
            "description" : "Publish anonymously?",
            "default" : false
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags or keywords",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_201_7" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BlogPost"
          }
        }
      },
      "body_23" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "Comment contents"
          }
        }
      },
      "body_24" : {
        "type" : "object",
        "properties" : {
          "collectionName" : {
            "type" : "string",
            "description" : "Organize the bookmark in collections",
            "default" : "My Collection"
          },
          "privacy" : {
            "type" : "string",
            "description" : "Define a privacy for the bookmark in the collection.",
            "default" : "private",
            "enum" : [ "public", "private" ]
          }
        }
      },
      "inline_response_200_20" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Opinion"
            }
          }
        }
      },
      "body_25" : {
        "required" : [ "content", "cover", "summary", "title", "topic" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Title"
          },
          "topic" : {
            "type" : "string",
            "description" : "Topic Id"
          },
          "summary" : {
            "type" : "string",
            "description" : "Short description for the opinion (headline)"
          },
          "cover" : {
            "type" : "string",
            "description" : "URL to a picture to use as cover.",
            "format" : "uri"
          },
          "video" : {
            "type" : "string",
            "description" : "A link to a video.",
            "format" : "uri"
          },
          "content" : {
            "type" : "string",
            "description" : "Opinion content (html payload)"
          },
          "anonymously" : {
            "type" : "boolean",
            "description" : "Publish anonymously?",
            "default" : false
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags or keywords",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "inline_response_201_8" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Opinion"
          }
        }
      },
      "body_26" : {
        "required" : [ "content" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "Comment contents"
          }
        }
      },
      "body_27" : {
        "type" : "object",
        "properties" : {
          "collectionName" : {
            "type" : "string",
            "description" : "Organize the bookmark in collections",
            "default" : "My Collection"
          },
          "privacy" : {
            "type" : "string",
            "description" : "Define a privacy for the bookmark in the collection.",
            "default" : "private",
            "enum" : [ "public", "private" ]
          }
        }
      },
      "inline_response_200_21" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Bookmark"
            }
          }
        }
      },
      "body_28" : {
        "required" : [ "objectId", "objectType" ],
        "type" : "object",
        "properties" : {
          "objectType" : {
            "type" : "string",
            "description" : "Type of the object to bookmark.",
            "enum" : [ "news", "poll", "talent", "petition", "blogPost", "opinion" ]
          },
          "objectId" : {
            "type" : "string",
            "description" : "Object Id."
          },
          "collectionName" : {
            "type" : "string",
            "description" : "Organize the bookmark in collections",
            "default" : "My Collection"
          },
          "privacy" : {
            "type" : "string",
            "description" : "Define a privacy for the bookmark in the collection.",
            "default" : "private",
            "enum" : [ "public", "private" ]
          }
        }
      },
      "inline_response_201_9" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Bookmark"
          }
        }
      },
      "inline_response_200_22" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IssueType"
            }
          }
        }
      },
      "body_29" : {
        "required" : [ "issueType", "objectId", "objectType" ],
        "type" : "object",
        "properties" : {
          "issueType" : {
            "type" : "string",
            "description" : "Id of the issue type."
          },
          "objectType" : {
            "type" : "string",
            "description" : "Type of the object to report.",
            "enum" : [ "news", "poll" ]
          },
          "objectId" : {
            "type" : "string",
            "description" : "Object Id."
          }
        }
      },
      "inline_response_200_23" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Notification"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/inline_response_200_11_meta"
          }
        }
      },
      "body_30" : {
        "required" : [ "ids" ],
        "type" : "object",
        "properties" : {
          "ids" : {
            "type" : "array",
            "description" : "Ids of all notification that should be mark as viewed.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "body_31" : {
        "required" : [ "ids" ],
        "type" : "object",
        "properties" : {
          "ids" : {
            "type" : "array",
            "description" : "Ids of all notification that should be mark as read.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "body_32" : {
        "required" : [ "ids" ],
        "type" : "object",
        "properties" : {
          "ids" : {
            "type" : "array",
            "description" : "Ids of all notification that should be mark as viewed.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "body_33" : {
        "required" : [ "ids" ],
        "type" : "object",
        "properties" : {
          "ids" : {
            "type" : "array",
            "description" : "Ids of all notification that should be mark as muted.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "body_34" : {
        "required" : [ "ids" ],
        "type" : "object",
        "properties" : {
          "ids" : {
            "type" : "array",
            "description" : "Ids of all notification that should be mark as unmuted.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "User_attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Registration name"
          },
          "displayName" : {
            "type" : "string",
            "description" : "How the user chosen to show himself"
          },
          "slug" : {
            "type" : "string",
            "description" : "Unique Url"
          },
          "gender" : {
            "type" : "string",
            "enum" : [ "null", "male", "female" ]
          },
          "photo" : {
            "type" : "string",
            "description" : "URL to user's avatar profile"
          },
          "type" : {
            "type" : "string",
            "description" : "Users can be either a user or a souce of news",
            "example" : "user",
            "enum" : [ "user", "source" ]
          },
          "about" : {
            "type" : "string",
            "description" : "Brief description about the user"
          },
          "country" : {
            "$ref" : "#/components/schemas/Country"
          },
          "city" : {
            "$ref" : "#/components/schemas/City"
          },
          "followingCount" : {
            "type" : "integer",
            "description" : "Number of users followed",
            "format" : "int32",
            "default" : 0
          },
          "followersCount" : {
            "type" : "integer",
            "description" : "Number of followers",
            "format" : "int32",
            "default" : 0
          },
          "topicsCount" : {
            "type" : "integer",
            "description" : "Number of topics followed",
            "format" : "int32",
            "default" : 0
          },
          "newsCount" : {
            "type" : "integer",
            "description" : "Number of news published",
            "format" : "int32",
            "default" : 0
          },
          "followed" : {
            "type" : "boolean",
            "description" : "If you follow the user"
          }
        }
      },
      "MinifiedUser_attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Registration name"
          },
          "displayName" : {
            "type" : "string",
            "description" : "How the user chosen to show himself"
          }
        }
      },
      "Notification_attributes_object_attributes" : {
        "type" : "object",
        "properties" : {
          "objectType" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "Notification_attributes_object" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Notification_attributes_object_attributes"
          }
        },
        "description" : "Object will be different for each type of notification. Here are listed the 'must have' properties"
      },
      "Notification_attributes" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of notification"
          },
          "times" : {
            "type" : "integer",
            "description" : "Times that that type of notification happens for the same object type and user",
            "format" : "int32"
          },
          "read" : {
            "type" : "boolean",
            "description" : "Read it by the user?"
          },
          "viewed" : {
            "type" : "boolean",
            "description" : "Viewed it by the user?"
          },
          "muted" : {
            "type" : "boolean",
            "description" : "Muted by the user?"
          },
          "who" : {
            "type" : "array",
            "description" : "Top last three people who perform the action that triggered the notification",
            "items" : {
              "$ref" : "#/components/schemas/MinifiedUser"
            }
          },
          "object" : {
            "$ref" : "#/components/schemas/Notification_attributes_object"
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "UTC datetime indicating when the news was published"
          }
        }
      },
      "Session_attributes" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "Session token generated after logon. Use it header Authorization: Bearer <token> for the next requests"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          }
        }
      },
      "Subscription_attributes" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          }
        }
      },
      "Topic_attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string",
            "description" : "Perefered color to display with the name"
          },
          "slug" : {
            "type" : "string",
            "description" : "User friendly SEO field to use in URLs"
          },
          "followersCount" : {
            "type" : "integer",
            "description" : "Number of followers",
            "format" : "int32",
            "default" : 0
          },
          "followed" : {
            "type" : "boolean",
            "description" : "If you follow the topic"
          }
        }
      },
      "Country_attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string",
            "description" : "ISO 3166-1 alpha-2 codes"
          }
        }
      },
      "City_attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string"
          }
        }
      },
      "News_attributes" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string",
            "description" : "User friendly SEO field to use in URLs"
          },
          "cover" : {
            "type" : "string",
            "description" : "Public URL to an image"
          },
          "video" : {
            "type" : "string",
            "description" : "Public URL to a the video"
          },
          "summary" : {
            "type" : "string",
            "description" : "Summary of the news."
          },
          "content" : {
            "type" : "string",
            "description" : "Body of the news. Contains HTML tags"
          },
          "contentType" : {
            "type" : "string",
            "description" : "Type of content detected.",
            "enum" : [ "html", "json" ]
          },
          "viewsCount" : {
            "type" : "integer",
            "description" : "Number of views",
            "format" : "int32",
            "default" : 0
          },
          "commentsCount" : {
            "type" : "integer",
            "description" : "Total of comments",
            "format" : "int32",
            "default" : 0
          },
          "likesCount" : {
            "type" : "integer",
            "description" : "Number of likes received",
            "format" : "int32",
            "default" : 0
          },
          "dislikesCount" : {
            "type" : "integer",
            "description" : "Number fo dislikes received",
            "format" : "int32",
            "default" : 0
          },
          "voted" : {
            "type" : "string",
            "description" : "Vote made by the user on this new",
            "enum" : [ "null", "like", "dislike" ]
          },
          "bookmarked" : {
            "type" : "boolean",
            "description" : "Bookmarked by the user?",
            "default" : false
          },
          "publishedAt" : {
            "type" : "string",
            "description" : "UTC datetime indicating when the news was published"
          },
          "topic" : {
            "$ref" : "#/components/schemas/Topic"
          },
          "publisher" : {
            "$ref" : "#/components/schemas/User"
          },
          "country" : {
            "$ref" : "#/components/schemas/Country"
          }
        }
      },
      "Poll_attributes_choices" : {
        "type" : "object",
        "properties" : {
          "votes" : {
            "type" : "integer",
            "description" : "How many time the choice was voted.",
            "format" : "int32"
          },
          "_id" : {
            "type" : "string",
            "description" : "Choice Id. Used to vote"
          },
          "choice" : {
            "type" : "string",
            "description" : "Text of choice"
          }
        }
      },
      "Poll_attributes" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string",
            "description" : "User friendly SEO field to use in URLs"
          },
          "cover" : {
            "type" : "string",
            "description" : "Public URL to an image"
          },
          "content" : {
            "type" : "string",
            "description" : "Body of the poll. Contains HTML tags"
          },
          "contentType" : {
            "type" : "string",
            "description" : "Type of content detected.",
            "enum" : [ "html", "json" ]
          },
          "choices" : {
            "type" : "array",
            "description" : "List of choices to vote",
            "items" : {
              "$ref" : "#/components/schemas/Poll_attributes_choices"
            }
          },
          "votes" : {
            "type" : "object",
            "description" : "Stats about voting choices. Keys are the ID of choices and values how many times the choices was voted."
          },
          "votesCount" : {
            "type" : "integer",
            "description" : "Total votes",
            "format" : "int32",
            "default" : 0
          },
          "voted" : {
            "type" : "string",
            "description" : "The user's vote"
          },
          "viewsCount" : {
            "type" : "integer",
            "description" : "Number of views",
            "format" : "int32",
            "default" : 0
          },
          "commentsCount" : {
            "type" : "integer",
            "description" : "Total of comments",
            "format" : "int32",
            "default" : 0
          },
          "bookmarked" : {
            "type" : "boolean",
            "description" : "Bookmarked by the user?",
            "default" : false
          },
          "endAt" : {
            "type" : "string",
            "description" : "UTC datetime indicating when the poll ends"
          },
          "ended" : {
            "type" : "boolean",
            "description" : "If the poll ended or not"
          },
          "topic" : {
            "$ref" : "#/components/schemas/Topic"
          },
          "publisher" : {
            "$ref" : "#/components/schemas/User"
          },
          "country" : {
            "$ref" : "#/components/schemas/Country"
          }
        }
      },
      "Talent_attributes" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string",
            "description" : "User friendly SEO field to use in URLs"
          },
          "cover" : {
            "type" : "string",
            "description" : "Public URL to an image"
          },
          "video" : {
            "type" : "string",
            "description" : "Public URL to a the video"
          },
          "content" : {
            "type" : "string",
            "description" : "Body of the news. Contains HTML tags"
          },
          "contentType" : {
            "type" : "string",
            "description" : "Type of content detected.",
            "enum" : [ "html", "json" ]
          },
          "viewsCount" : {
            "type" : "integer",
            "description" : "Number of views",
            "format" : "int32",
            "default" : 0
          },
          "commentsCount" : {
            "type" : "integer",
            "description" : "Total of comments",
            "format" : "int32",
            "default" : 0
          },
          "likesCount" : {
            "type" : "integer",
            "description" : "Number of likes received",
            "format" : "int32",
            "default" : 0
          },
          "dislikesCount" : {
            "type" : "integer",
            "description" : "Number fo dislikes received",
            "format" : "int32",
            "default" : 0
          },
          "voted" : {
            "type" : "string",
            "description" : "Vote made by the user on this talent post",
            "enum" : [ "null", "like", "dislike" ]
          },
          "bookmarked" : {
            "type" : "boolean",
            "description" : "Bookmarked by the user?",
            "default" : false
          },
          "publishedAt" : {
            "type" : "string",
            "description" : "UTC datetime indicating when the news was published"
          },
          "topic" : {
            "$ref" : "#/components/schemas/Topic"
          },
          "publisher" : {
            "$ref" : "#/components/schemas/User"
          },
          "country" : {
            "$ref" : "#/components/schemas/Country"
          }
        }
      },
      "Petition_attributes" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string",
            "description" : "User friendly SEO field to use in URLs"
          },
          "to" : {
            "type" : "string",
            "description" : "The person, organization, or group that can make a decision about the petition"
          },
          "cover" : {
            "type" : "string",
            "description" : "Public URL to an image"
          },
          "content" : {
            "type" : "string",
            "description" : "Body of the petition. Contains HTML tags"
          },
          "contentType" : {
            "type" : "string",
            "description" : "Type of content detected",
            "enum" : [ "html", "json" ]
          },
          "goal" : {
            "type" : "integer",
            "description" : "How many signatures are required?",
            "format" : "int32"
          },
          "signaturesCount" : {
            "type" : "integer",
            "description" : "The number of users signing the petition",
            "format" : "int32"
          },
          "completeness" : {
            "type" : "number",
            "description" : "Percent of signatures archived",
            "format" : "float"
          },
          "completed" : {
            "type" : "boolean",
            "description" : "If the petition is completed"
          },
          "viewsCount" : {
            "type" : "integer",
            "description" : "Number of views",
            "format" : "int32",
            "default" : 0
          },
          "commentsCount" : {
            "type" : "integer",
            "description" : "Total of comments",
            "format" : "int32",
            "default" : 0
          },
          "likesCount" : {
            "type" : "integer",
            "description" : "Number of likes received",
            "format" : "int32",
            "default" : 0
          },
          "dislikesCount" : {
            "type" : "integer",
            "description" : "Number fo dislikes received",
            "format" : "int32",
            "default" : 0
          },
          "voted" : {
            "type" : "string",
            "description" : "Vote made by the user on this talent post",
            "enum" : [ "null", "like", "dislike" ]
          },
          "bookmarked" : {
            "type" : "boolean",
            "description" : "Bookmarked by the user?",
            "default" : false
          },
          "endAt" : {
            "type" : "string",
            "description" : "Optional ending date",
            "format" : "date"
          },
          "publishedAt" : {
            "type" : "string",
            "description" : "UTC datetime indicating when the news was published",
            "format" : "date"
          },
          "lastSignatureAt" : {
            "type" : "string",
            "description" : "Datetime of the last signature",
            "format" : "date"
          },
          "topic" : {
            "$ref" : "#/components/schemas/Topic"
          },
          "publisher" : {
            "$ref" : "#/components/schemas/User"
          },
          "country" : {
            "$ref" : "#/components/schemas/Country"
          }
        }
      },
      "PetitionSignature_attributes" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the user signing the petition"
          },
          "lastName" : {
            "type" : "string",
            "description" : "Last name of the user signing the petition"
          },
          "content" : {
            "type" : "string",
            "description" : "Comment of the sign. Contains HTML tags"
          },
          "contentType" : {
            "type" : "string",
            "description" : "Type of content detected",
            "enum" : [ "html", "json" ]
          },
          "publishedAt" : {
            "type" : "string",
            "description" : "UTC datetime indicating when the news was published"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          }
        }
      },
      "Comment_attributes" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "Body of the comment. Contains HTML tags"
          },
          "author" : {
            "$ref" : "#/components/schemas/User"
          }
        }
      },
      "BlogPost_attributes" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string",
            "description" : "User friendly SEO field to use in URLs"
          },
          "cover" : {
            "type" : "string",
            "description" : "Public URL to an image"
          },
          "video" : {
            "type" : "string",
            "description" : "Public URL to a the video"
          },
          "summary" : {
            "type" : "string",
            "description" : "Summary of the post."
          },
          "content" : {
            "type" : "string",
            "description" : "Body of the post. Contains HTML tags"
          },
          "contentType" : {
            "type" : "string",
            "description" : "Type of content detected.",
            "enum" : [ "html", "json" ]
          },
          "website" : {
            "type" : "string",
            "description" : "Link to the source URL"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags or keywords",
            "items" : {
              "type" : "string"
            }
          },
          "viewsCount" : {
            "type" : "integer",
            "description" : "Number of views",
            "format" : "int32",
            "default" : 0
          },
          "commentsCount" : {
            "type" : "integer",
            "description" : "Total of comments",
            "format" : "int32",
            "default" : 0
          },
          "likesCount" : {
            "type" : "integer",
            "description" : "Number of likes received",
            "format" : "int32",
            "default" : 0
          },
          "dislikesCount" : {
            "type" : "integer",
            "description" : "Number fo dislikes received",
            "format" : "int32",
            "default" : 0
          },
          "voted" : {
            "type" : "string",
            "description" : "Vote made by the user on this new",
            "enum" : [ "null", "like", "dislike" ]
          },
          "bookmarked" : {
            "type" : "boolean",
            "description" : "Bookmarked by the user?",
            "default" : false
          },
          "publishedAt" : {
            "type" : "string",
            "description" : "UTC datetime indicating when the news was published"
          },
          "topic" : {
            "$ref" : "#/components/schemas/Topic"
          },
          "publisher" : {
            "$ref" : "#/components/schemas/User"
          },
          "country" : {
            "$ref" : "#/components/schemas/Country"
          }
        }
      },
      "Opinion_attributes" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string",
            "description" : "User friendly SEO field to use in URLs"
          },
          "cover" : {
            "type" : "string",
            "description" : "Public URL to an image"
          },
          "video" : {
            "type" : "string",
            "description" : "Public URL to a the video"
          },
          "summary" : {
            "type" : "string",
            "description" : "Summary of the opinion."
          },
          "content" : {
            "type" : "string",
            "description" : "Body of the opinion. Contains HTML tags"
          },
          "contentType" : {
            "type" : "string",
            "description" : "Type of content detected.",
            "enum" : [ "html", "json" ]
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags or keywords",
            "items" : {
              "type" : "string"
            }
          },
          "viewsCount" : {
            "type" : "integer",
            "description" : "Number of views",
            "format" : "int32",
            "default" : 0
          },
          "commentsCount" : {
            "type" : "integer",
            "description" : "Total of comments",
            "format" : "int32",
            "default" : 0
          },
          "likesCount" : {
            "type" : "integer",
            "description" : "Number of likes received",
            "format" : "int32",
            "default" : 0
          },
          "dislikesCount" : {
            "type" : "integer",
            "description" : "Number fo dislikes received",
            "format" : "int32",
            "default" : 0
          },
          "voted" : {
            "type" : "string",
            "description" : "Vote made by the user on this new",
            "enum" : [ "null", "like", "dislike" ]
          },
          "bookmarked" : {
            "type" : "boolean",
            "description" : "Bookmarked by the user?",
            "default" : false
          },
          "publishedAt" : {
            "type" : "string",
            "description" : "UTC datetime indicating when the news was published"
          },
          "topic" : {
            "$ref" : "#/components/schemas/Topic"
          },
          "publisher" : {
            "$ref" : "#/components/schemas/User"
          },
          "country" : {
            "$ref" : "#/components/schemas/Country"
          }
        }
      },
      "Upload_attributes" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          }
        }
      },
      "IssueType_attributes" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "The option to choose"
          },
          "summary" : {
            "type" : "string",
            "description" : "No applicable for the mobile version"
          }
        }
      },
      "Bookmark_attributes" : {
        "type" : "object",
        "properties" : {
          "objectType" : {
            "type" : "string",
            "example" : "news | poll | talent | petition | blogPost | opinion"
          },
          "objectId" : {
            "type" : "string",
            "description" : "Id of object bookmarked."
          },
          "object" : {
            "description" : "Object bookmarked.",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/News"
            }, {
              "$ref" : "#/components/schemas/Poll"
            }, {
              "$ref" : "#/components/schemas/Talent"
            }, {
              "$ref" : "#/components/schemas/Petition"
            }, {
              "$ref" : "#/components/schemas/BlogPost"
            }, {
              "$ref" : "#/components/schemas/Opinion"
            } ]
          }
        }
      }
    },
    "parameters" : {
      "pageParam" : {
        "name" : "page",
        "in" : "query",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "minimum" : 1,
          "type" : "integer",
          "format" : "int32",
          "default" : 1
        }
      },
      "limitParam" : {
        "name" : "limit",
        "in" : "query",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "minimum" : 1,
          "type" : "integer",
          "format" : "int32",
          "default" : 16
        }
      }
    },
    "securitySchemes" : {
      "BearerAuth" : {
        "type" : "http",
        "scheme" : "bearer"
      }
    }
  }
}